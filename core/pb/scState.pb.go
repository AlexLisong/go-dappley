// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core/pb/scState.proto

package corepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type State struct {
	State                map[string]string `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_scState_e0dd88c7a77cb256, []int{0}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (dst *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(dst, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetState() map[string]string {
	if m != nil {
		return m.State
	}
	return nil
}

type ScState struct {
	States               map[string]*State `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ScState) Reset()         { *m = ScState{} }
func (m *ScState) String() string { return proto.CompactTextString(m) }
func (*ScState) ProtoMessage()    {}
func (*ScState) Descriptor() ([]byte, []int) {
	return fileDescriptor_scState_e0dd88c7a77cb256, []int{1}
}
func (m *ScState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScState.Unmarshal(m, b)
}
func (m *ScState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScState.Marshal(b, m, deterministic)
}
func (dst *ScState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScState.Merge(dst, src)
}
func (m *ScState) XXX_Size() int {
	return xxx_messageInfo_ScState.Size(m)
}
func (m *ScState) XXX_DiscardUnknown() {
	xxx_messageInfo_ScState.DiscardUnknown(m)
}

var xxx_messageInfo_ScState proto.InternalMessageInfo

func (m *ScState) GetStates() map[string]*State {
	if m != nil {
		return m.States
	}
	return nil
}

func init() {
	proto.RegisterType((*State)(nil), "corepb.State")
	proto.RegisterMapType((map[string]string)(nil), "corepb.State.StateEntry")
	proto.RegisterType((*ScState)(nil), "corepb.ScState")
	proto.RegisterMapType((map[string]*State)(nil), "corepb.ScState.StatesEntry")
}

func init() { proto.RegisterFile("core/pb/scState.proto", fileDescriptor_scState_e0dd88c7a77cb256) }

var fileDescriptor_scState_e0dd88c7a77cb256 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0xce, 0x2f, 0x4a,
	0xd5, 0x2f, 0x48, 0xd2, 0x2f, 0x4e, 0x0e, 0x2e, 0x49, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x03, 0x09, 0x17, 0x24, 0x29, 0x15, 0x72, 0xb1, 0x82, 0x85, 0x85, 0xf4, 0xb8,
	0x58, 0x8b, 0x41, 0x0c, 0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x09, 0x3d, 0x88, 0x02, 0x3d,
	0x88, 0x26, 0x30, 0xe9, 0x9a, 0x57, 0x52, 0x54, 0x19, 0x04, 0x51, 0x26, 0x65, 0xc1, 0xc5, 0x85,
	0x10, 0x14, 0x12, 0xe0, 0x62, 0xce, 0x4e, 0xad, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02,
	0x31, 0x85, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x98, 0xc0, 0x62, 0x10, 0x8e,
	0x15, 0x93, 0x05, 0xa3, 0x52, 0x07, 0x23, 0x17, 0x7b, 0x30, 0xc4, 0x31, 0x42, 0xc6, 0x5c, 0x6c,
	0x60, 0xe3, 0x8a, 0xa1, 0xd6, 0x4a, 0xc3, 0xad, 0x4d, 0x46, 0xb2, 0xb8, 0x18, 0x62, 0x33, 0x54,
	0xa9, 0x94, 0x07, 0x17, 0x37, 0x92, 0x30, 0x16, 0xbb, 0x95, 0x91, 0xed, 0xe6, 0x36, 0xe2, 0x45,
	0xf1, 0x0b, 0x92, 0x53, 0x92, 0xd8, 0xc0, 0x81, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x9c,
	0x47, 0x3a, 0xc9, 0x25, 0x01, 0x00, 0x00,
}
