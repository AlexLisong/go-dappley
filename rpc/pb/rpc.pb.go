// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/dappley/go-dappley/rpc/pb/rpc.proto

package rpcpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pb3 "github.com/dappley/go-dappley/core/block/pb"
import pb "github.com/dappley/go-dappley/core/transaction/pb"
import pb2 "github.com/dappley/go-dappley/core/utxo/pb"
import pb4 "github.com/dappley/go-dappley/metrics/pb"
import pb1 "github.com/dappley/go-dappley/network/pb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetNodeConfigRequest_ConfigType int32

const (
	SetNodeConfigRequest_TX_POOL_LIMIT  SetNodeConfigRequest_ConfigType = 0
	SetNodeConfigRequest_BLK_SIZE_LIMIT SetNodeConfigRequest_ConfigType = 1
	SetNodeConfigRequest_MAX_CONN_OUT   SetNodeConfigRequest_ConfigType = 2
	SetNodeConfigRequest_MAX_CONN_IN    SetNodeConfigRequest_ConfigType = 3
	SetNodeConfigRequest_MAX_PRODUCERS  SetNodeConfigRequest_ConfigType = 4
	SetNodeConfigRequest_PRODUCERS      SetNodeConfigRequest_ConfigType = 5
)

var SetNodeConfigRequest_ConfigType_name = map[int32]string{
	0: "TX_POOL_LIMIT",
	1: "BLK_SIZE_LIMIT",
	2: "MAX_CONN_OUT",
	3: "MAX_CONN_IN",
	4: "MAX_PRODUCERS",
	5: "PRODUCERS",
}
var SetNodeConfigRequest_ConfigType_value = map[string]int32{
	"TX_POOL_LIMIT":  0,
	"BLK_SIZE_LIMIT": 1,
	"MAX_CONN_OUT":   2,
	"MAX_CONN_IN":    3,
	"MAX_PRODUCERS":  4,
	"PRODUCERS":      5,
}

func (x SetNodeConfigRequest_ConfigType) String() string {
	return proto.EnumName(SetNodeConfigRequest_ConfigType_name, int32(x))
}
func (SetNodeConfigRequest_ConfigType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{45, 0}
}

type CreateAccountRequest struct {
	Passphrase           string   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{0}
}
func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(dst, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type UnlockAccountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockAccountRequest) Reset()         { *m = UnlockAccountRequest{} }
func (m *UnlockAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockAccountRequest) ProtoMessage()    {}
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{1}
}
func (m *UnlockAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockAccountRequest.Unmarshal(m, b)
}
func (m *UnlockAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockAccountRequest.Marshal(b, m, deterministic)
}
func (dst *UnlockAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockAccountRequest.Merge(dst, src)
}
func (m *UnlockAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockAccountRequest.Size(m)
}
func (m *UnlockAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockAccountRequest proto.InternalMessageInfo

type AddProducerRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProducerRequest) Reset()         { *m = AddProducerRequest{} }
func (m *AddProducerRequest) String() string { return proto.CompactTextString(m) }
func (*AddProducerRequest) ProtoMessage()    {}
func (*AddProducerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{2}
}
func (m *AddProducerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProducerRequest.Unmarshal(m, b)
}
func (m *AddProducerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProducerRequest.Marshal(b, m, deterministic)
}
func (dst *AddProducerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProducerRequest.Merge(dst, src)
}
func (m *AddProducerRequest) XXX_Size() int {
	return xxx_messageInfo_AddProducerRequest.Size(m)
}
func (m *AddProducerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProducerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddProducerRequest proto.InternalMessageInfo

func (m *AddProducerRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetBalanceRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceRequest) Reset()         { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()    {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{3}
}
func (m *GetBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceRequest.Unmarshal(m, b)
}
func (m *GetBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceRequest.Marshal(b, m, deterministic)
}
func (dst *GetBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceRequest.Merge(dst, src)
}
func (m *GetBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalanceRequest.Size(m)
}
func (m *GetBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceRequest proto.InternalMessageInfo

func (m *GetBalanceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SendFromMinerRequest struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount               []byte   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFromMinerRequest) Reset()         { *m = SendFromMinerRequest{} }
func (m *SendFromMinerRequest) String() string { return proto.CompactTextString(m) }
func (*SendFromMinerRequest) ProtoMessage()    {}
func (*SendFromMinerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{4}
}
func (m *SendFromMinerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFromMinerRequest.Unmarshal(m, b)
}
func (m *SendFromMinerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFromMinerRequest.Marshal(b, m, deterministic)
}
func (dst *SendFromMinerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFromMinerRequest.Merge(dst, src)
}
func (m *SendFromMinerRequest) XXX_Size() int {
	return xxx_messageInfo_SendFromMinerRequest.Size(m)
}
func (m *SendFromMinerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFromMinerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendFromMinerRequest proto.InternalMessageInfo

func (m *SendFromMinerRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendFromMinerRequest) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

type SendRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount               []byte   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	AccountPath          string   `protobuf:"bytes,4,opt,name=account_path,json=accountPath,proto3" json:"account_path,omitempty"`
	Tip                  []byte   `protobuf:"bytes,5,opt,name=tip,proto3" json:"tip,omitempty"`
	Data                 string   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	GasLimit             []byte   `protobuf:"bytes,7,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasPrice             []byte   `protobuf:"bytes,8,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{5}
}
func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (dst *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(dst, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *SendRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendRequest) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *SendRequest) GetAccountPath() string {
	if m != nil {
		return m.AccountPath
	}
	return ""
}

func (m *SendRequest) GetTip() []byte {
	if m != nil {
		return m.Tip
	}
	return nil
}

func (m *SendRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *SendRequest) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *SendRequest) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

type GetPeerInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeerInfoRequest) Reset()         { *m = GetPeerInfoRequest{} }
func (m *GetPeerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetPeerInfoRequest) ProtoMessage()    {}
func (*GetPeerInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{6}
}
func (m *GetPeerInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeerInfoRequest.Unmarshal(m, b)
}
func (m *GetPeerInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeerInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetPeerInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeerInfoRequest.Merge(dst, src)
}
func (m *GetPeerInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetPeerInfoRequest.Size(m)
}
func (m *GetPeerInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeerInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeerInfoRequest proto.InternalMessageInfo

type GetBlockchainInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockchainInfoRequest) Reset()         { *m = GetBlockchainInfoRequest{} }
func (m *GetBlockchainInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainInfoRequest) ProtoMessage()    {}
func (*GetBlockchainInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{7}
}
func (m *GetBlockchainInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainInfoRequest.Unmarshal(m, b)
}
func (m *GetBlockchainInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockchainInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainInfoRequest.Merge(dst, src)
}
func (m *GetBlockchainInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainInfoRequest.Size(m)
}
func (m *GetBlockchainInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainInfoRequest proto.InternalMessageInfo

type AddPeerRequest struct {
	FullAddress          string   `protobuf:"bytes,1,opt,name=full_address,json=fullAddress,proto3" json:"full_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPeerRequest) Reset()         { *m = AddPeerRequest{} }
func (m *AddPeerRequest) String() string { return proto.CompactTextString(m) }
func (*AddPeerRequest) ProtoMessage()    {}
func (*AddPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{8}
}
func (m *AddPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPeerRequest.Unmarshal(m, b)
}
func (m *AddPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPeerRequest.Marshal(b, m, deterministic)
}
func (dst *AddPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPeerRequest.Merge(dst, src)
}
func (m *AddPeerRequest) XXX_Size() int {
	return xxx_messageInfo_AddPeerRequest.Size(m)
}
func (m *AddPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPeerRequest proto.InternalMessageInfo

func (m *AddPeerRequest) GetFullAddress() string {
	if m != nil {
		return m.FullAddress
	}
	return ""
}

type GetVersionRequest struct {
	ProtoVersion         string   `protobuf:"bytes,1,opt,name=proto_version,json=protoVersion,proto3" json:"proto_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{9}
}
func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (dst *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(dst, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

func (m *GetVersionRequest) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

type GetUTXORequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUTXORequest) Reset()         { *m = GetUTXORequest{} }
func (m *GetUTXORequest) String() string { return proto.CompactTextString(m) }
func (*GetUTXORequest) ProtoMessage()    {}
func (*GetUTXORequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{10}
}
func (m *GetUTXORequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUTXORequest.Unmarshal(m, b)
}
func (m *GetUTXORequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUTXORequest.Marshal(b, m, deterministic)
}
func (dst *GetUTXORequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUTXORequest.Merge(dst, src)
}
func (m *GetUTXORequest) XXX_Size() int {
	return xxx_messageInfo_GetUTXORequest.Size(m)
}
func (m *GetUTXORequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUTXORequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUTXORequest proto.InternalMessageInfo

func (m *GetUTXORequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetBlocksRequest struct {
	StartBlockHashes     [][]byte `protobuf:"bytes,1,rep,name=start_block_hashes,json=startBlockHashes,proto3" json:"start_block_hashes,omitempty"`
	MaxCount             int32    `protobuf:"varint,2,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlocksRequest) Reset()         { *m = GetBlocksRequest{} }
func (m *GetBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlocksRequest) ProtoMessage()    {}
func (*GetBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{11}
}
func (m *GetBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocksRequest.Unmarshal(m, b)
}
func (m *GetBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocksRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocksRequest.Merge(dst, src)
}
func (m *GetBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlocksRequest.Size(m)
}
func (m *GetBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocksRequest proto.InternalMessageInfo

func (m *GetBlocksRequest) GetStartBlockHashes() [][]byte {
	if m != nil {
		return m.StartBlockHashes
	}
	return nil
}

func (m *GetBlocksRequest) GetMaxCount() int32 {
	if m != nil {
		return m.MaxCount
	}
	return 0
}

type GetBlockByHashRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHashRequest) Reset()         { *m = GetBlockByHashRequest{} }
func (m *GetBlockByHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHashRequest) ProtoMessage()    {}
func (*GetBlockByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{12}
}
func (m *GetBlockByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHashRequest.Unmarshal(m, b)
}
func (m *GetBlockByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHashRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHashRequest.Merge(dst, src)
}
func (m *GetBlockByHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHashRequest.Size(m)
}
func (m *GetBlockByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHashRequest proto.InternalMessageInfo

func (m *GetBlockByHashRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetBlockByHeightRequest struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHeightRequest) Reset()         { *m = GetBlockByHeightRequest{} }
func (m *GetBlockByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHeightRequest) ProtoMessage()    {}
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{13}
}
func (m *GetBlockByHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHeightRequest.Unmarshal(m, b)
}
func (m *GetBlockByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHeightRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHeightRequest.Merge(dst, src)
}
func (m *GetBlockByHeightRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHeightRequest.Size(m)
}
func (m *GetBlockByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHeightRequest proto.InternalMessageInfo

func (m *GetBlockByHeightRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type SendTransactionRequest struct {
	Transaction          *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{14}
}
func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(dst, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetTransaction() *pb.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SendBatchTransactionRequest struct {
	Transactions         []*pb.Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendBatchTransactionRequest) Reset()         { *m = SendBatchTransactionRequest{} }
func (m *SendBatchTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendBatchTransactionRequest) ProtoMessage()    {}
func (*SendBatchTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{15}
}
func (m *SendBatchTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendBatchTransactionRequest.Unmarshal(m, b)
}
func (m *SendBatchTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendBatchTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SendBatchTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendBatchTransactionRequest.Merge(dst, src)
}
func (m *SendBatchTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendBatchTransactionRequest.Size(m)
}
func (m *SendBatchTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendBatchTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendBatchTransactionRequest proto.InternalMessageInfo

func (m *SendBatchTransactionRequest) GetTransactions() []*pb.Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetNewTransactionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewTransactionRequest) Reset()         { *m = GetNewTransactionRequest{} }
func (m *GetNewTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewTransactionRequest) ProtoMessage()    {}
func (*GetNewTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{16}
}
func (m *GetNewTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewTransactionRequest.Unmarshal(m, b)
}
func (m *GetNewTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *GetNewTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewTransactionRequest.Merge(dst, src)
}
func (m *GetNewTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewTransactionRequest.Size(m)
}
func (m *GetNewTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewTransactionRequest proto.InternalMessageInfo

type SubscribeRequest struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{17}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(dst, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type MetricsServiceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsServiceRequest) Reset()         { *m = MetricsServiceRequest{} }
func (m *MetricsServiceRequest) String() string { return proto.CompactTextString(m) }
func (*MetricsServiceRequest) ProtoMessage()    {}
func (*MetricsServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{18}
}
func (m *MetricsServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsServiceRequest.Unmarshal(m, b)
}
func (m *MetricsServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsServiceRequest.Marshal(b, m, deterministic)
}
func (dst *MetricsServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsServiceRequest.Merge(dst, src)
}
func (m *MetricsServiceRequest) XXX_Size() int {
	return xxx_messageInfo_MetricsServiceRequest.Size(m)
}
func (m *MetricsServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsServiceRequest proto.InternalMessageInfo

type GetLastIrreversibleBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLastIrreversibleBlockRequest) Reset()         { *m = GetLastIrreversibleBlockRequest{} }
func (m *GetLastIrreversibleBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastIrreversibleBlockRequest) ProtoMessage()    {}
func (*GetLastIrreversibleBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{19}
}
func (m *GetLastIrreversibleBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastIrreversibleBlockRequest.Unmarshal(m, b)
}
func (m *GetLastIrreversibleBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastIrreversibleBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GetLastIrreversibleBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastIrreversibleBlockRequest.Merge(dst, src)
}
func (m *GetLastIrreversibleBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetLastIrreversibleBlockRequest.Size(m)
}
func (m *GetLastIrreversibleBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastIrreversibleBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastIrreversibleBlockRequest proto.InternalMessageInfo

type EstimateGasRequest struct {
	Transaction          *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EstimateGasRequest) Reset()         { *m = EstimateGasRequest{} }
func (m *EstimateGasRequest) String() string { return proto.CompactTextString(m) }
func (*EstimateGasRequest) ProtoMessage()    {}
func (*EstimateGasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{20}
}
func (m *EstimateGasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateGasRequest.Unmarshal(m, b)
}
func (m *EstimateGasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateGasRequest.Marshal(b, m, deterministic)
}
func (dst *EstimateGasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateGasRequest.Merge(dst, src)
}
func (m *EstimateGasRequest) XXX_Size() int {
	return xxx_messageInfo_EstimateGasRequest.Size(m)
}
func (m *EstimateGasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateGasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateGasRequest proto.InternalMessageInfo

func (m *EstimateGasRequest) GetTransaction() *pb.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type GasPriceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasPriceRequest) Reset()         { *m = GasPriceRequest{} }
func (m *GasPriceRequest) String() string { return proto.CompactTextString(m) }
func (*GasPriceRequest) ProtoMessage()    {}
func (*GasPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{21}
}
func (m *GasPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasPriceRequest.Unmarshal(m, b)
}
func (m *GasPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasPriceRequest.Marshal(b, m, deterministic)
}
func (dst *GasPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasPriceRequest.Merge(dst, src)
}
func (m *GasPriceRequest) XXX_Size() int {
	return xxx_messageInfo_GasPriceRequest.Size(m)
}
func (m *GasPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GasPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GasPriceRequest proto.InternalMessageInfo

type AddProducerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProducerResponse) Reset()         { *m = AddProducerResponse{} }
func (m *AddProducerResponse) String() string { return proto.CompactTextString(m) }
func (*AddProducerResponse) ProtoMessage()    {}
func (*AddProducerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{22}
}
func (m *AddProducerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProducerResponse.Unmarshal(m, b)
}
func (m *AddProducerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProducerResponse.Marshal(b, m, deterministic)
}
func (dst *AddProducerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProducerResponse.Merge(dst, src)
}
func (m *AddProducerResponse) XXX_Size() int {
	return xxx_messageInfo_AddProducerResponse.Size(m)
}
func (m *AddProducerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProducerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddProducerResponse proto.InternalMessageInfo

type UnlockAccountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockAccountResponse) Reset()         { *m = UnlockAccountResponse{} }
func (m *UnlockAccountResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockAccountResponse) ProtoMessage()    {}
func (*UnlockAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{23}
}
func (m *UnlockAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockAccountResponse.Unmarshal(m, b)
}
func (m *UnlockAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockAccountResponse.Marshal(b, m, deterministic)
}
func (dst *UnlockAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockAccountResponse.Merge(dst, src)
}
func (m *UnlockAccountResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockAccountResponse.Size(m)
}
func (m *UnlockAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockAccountResponse proto.InternalMessageInfo

type GetBalanceResponse struct {
	Amount               int64    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceResponse) Reset()         { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()    {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{24}
}
func (m *GetBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceResponse.Unmarshal(m, b)
}
func (m *GetBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceResponse.Marshal(b, m, deterministic)
}
func (dst *GetBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceResponse.Merge(dst, src)
}
func (m *GetBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetBalanceResponse.Size(m)
}
func (m *GetBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceResponse proto.InternalMessageInfo

func (m *GetBalanceResponse) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type SendFromMinerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFromMinerResponse) Reset()         { *m = SendFromMinerResponse{} }
func (m *SendFromMinerResponse) String() string { return proto.CompactTextString(m) }
func (*SendFromMinerResponse) ProtoMessage()    {}
func (*SendFromMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{25}
}
func (m *SendFromMinerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFromMinerResponse.Unmarshal(m, b)
}
func (m *SendFromMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFromMinerResponse.Marshal(b, m, deterministic)
}
func (dst *SendFromMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFromMinerResponse.Merge(dst, src)
}
func (m *SendFromMinerResponse) XXX_Size() int {
	return xxx_messageInfo_SendFromMinerResponse.Size(m)
}
func (m *SendFromMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFromMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendFromMinerResponse proto.InternalMessageInfo

type SendResponse struct {
	ContractAddress      string   `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Txid                 string   `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{26}
}
func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (dst *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(dst, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *SendResponse) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type GetPeerInfoResponse struct {
	PeerList             []*pb1.PeerInfo `protobuf:"bytes,1,rep,name=peer_list,json=peerList,proto3" json:"peer_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetPeerInfoResponse) Reset()         { *m = GetPeerInfoResponse{} }
func (m *GetPeerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetPeerInfoResponse) ProtoMessage()    {}
func (*GetPeerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{27}
}
func (m *GetPeerInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeerInfoResponse.Unmarshal(m, b)
}
func (m *GetPeerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeerInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetPeerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeerInfoResponse.Merge(dst, src)
}
func (m *GetPeerInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetPeerInfoResponse.Size(m)
}
func (m *GetPeerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeerInfoResponse proto.InternalMessageInfo

func (m *GetPeerInfoResponse) GetPeerList() []*pb1.PeerInfo {
	if m != nil {
		return m.PeerList
	}
	return nil
}

type GetBlockchainInfoResponse struct {
	TailBlockHash        []byte   `protobuf:"bytes,1,opt,name=tail_block_hash,json=tailBlockHash,proto3" json:"tail_block_hash,omitempty"`
	BlockHeight          uint64   `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Producers            []string `protobuf:"bytes,3,rep,name=producers,proto3" json:"producers,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockchainInfoResponse) Reset()         { *m = GetBlockchainInfoResponse{} }
func (m *GetBlockchainInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainInfoResponse) ProtoMessage()    {}
func (*GetBlockchainInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{28}
}
func (m *GetBlockchainInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainInfoResponse.Unmarshal(m, b)
}
func (m *GetBlockchainInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockchainInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainInfoResponse.Merge(dst, src)
}
func (m *GetBlockchainInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainInfoResponse.Size(m)
}
func (m *GetBlockchainInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainInfoResponse proto.InternalMessageInfo

func (m *GetBlockchainInfoResponse) GetTailBlockHash() []byte {
	if m != nil {
		return m.TailBlockHash
	}
	return nil
}

func (m *GetBlockchainInfoResponse) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *GetBlockchainInfoResponse) GetProducers() []string {
	if m != nil {
		return m.Producers
	}
	return nil
}

func (m *GetBlockchainInfoResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type AddPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPeerResponse) Reset()         { *m = AddPeerResponse{} }
func (m *AddPeerResponse) String() string { return proto.CompactTextString(m) }
func (*AddPeerResponse) ProtoMessage()    {}
func (*AddPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{29}
}
func (m *AddPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPeerResponse.Unmarshal(m, b)
}
func (m *AddPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPeerResponse.Marshal(b, m, deterministic)
}
func (dst *AddPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPeerResponse.Merge(dst, src)
}
func (m *AddPeerResponse) XXX_Size() int {
	return xxx_messageInfo_AddPeerResponse.Size(m)
}
func (m *AddPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPeerResponse proto.InternalMessageInfo

type GetVersionResponse struct {
	ProtoVersion         string   `protobuf:"bytes,1,opt,name=proto_version,json=protoVersion,proto3" json:"proto_version,omitempty"`
	ServerVersion        string   `protobuf:"bytes,2,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{30}
}
func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (dst *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(dst, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

func (m *GetVersionResponse) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

type GetUTXOResponse struct {
	Utxos                []*pb2.Utxo        `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	BlockHeaders         []*pb3.BlockHeader `protobuf:"bytes,2,rep,name=block_headers,json=blockHeaders,proto3" json:"block_headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetUTXOResponse) Reset()         { *m = GetUTXOResponse{} }
func (m *GetUTXOResponse) String() string { return proto.CompactTextString(m) }
func (*GetUTXOResponse) ProtoMessage()    {}
func (*GetUTXOResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{31}
}
func (m *GetUTXOResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUTXOResponse.Unmarshal(m, b)
}
func (m *GetUTXOResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUTXOResponse.Marshal(b, m, deterministic)
}
func (dst *GetUTXOResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUTXOResponse.Merge(dst, src)
}
func (m *GetUTXOResponse) XXX_Size() int {
	return xxx_messageInfo_GetUTXOResponse.Size(m)
}
func (m *GetUTXOResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUTXOResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUTXOResponse proto.InternalMessageInfo

func (m *GetUTXOResponse) GetUtxos() []*pb2.Utxo {
	if m != nil {
		return m.Utxos
	}
	return nil
}

func (m *GetUTXOResponse) GetBlockHeaders() []*pb3.BlockHeader {
	if m != nil {
		return m.BlockHeaders
	}
	return nil
}

type GetBlocksResponse struct {
	Blocks               []*pb3.Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetBlocksResponse) Reset()         { *m = GetBlocksResponse{} }
func (m *GetBlocksResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlocksResponse) ProtoMessage()    {}
func (*GetBlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{32}
}
func (m *GetBlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocksResponse.Unmarshal(m, b)
}
func (m *GetBlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocksResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocksResponse.Merge(dst, src)
}
func (m *GetBlocksResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlocksResponse.Size(m)
}
func (m *GetBlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocksResponse proto.InternalMessageInfo

func (m *GetBlocksResponse) GetBlocks() []*pb3.Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type GetBlockByHashResponse struct {
	Block                *pb3.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetBlockByHashResponse) Reset()         { *m = GetBlockByHashResponse{} }
func (m *GetBlockByHashResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHashResponse) ProtoMessage()    {}
func (*GetBlockByHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{33}
}
func (m *GetBlockByHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHashResponse.Unmarshal(m, b)
}
func (m *GetBlockByHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHashResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHashResponse.Merge(dst, src)
}
func (m *GetBlockByHashResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHashResponse.Size(m)
}
func (m *GetBlockByHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHashResponse proto.InternalMessageInfo

func (m *GetBlockByHashResponse) GetBlock() *pb3.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetBlockByHeightResponse struct {
	Block                *pb3.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetBlockByHeightResponse) Reset()         { *m = GetBlockByHeightResponse{} }
func (m *GetBlockByHeightResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHeightResponse) ProtoMessage()    {}
func (*GetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{34}
}
func (m *GetBlockByHeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHeightResponse.Unmarshal(m, b)
}
func (m *GetBlockByHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHeightResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHeightResponse.Merge(dst, src)
}
func (m *GetBlockByHeightResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHeightResponse.Size(m)
}
func (m *GetBlockByHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHeightResponse proto.InternalMessageInfo

func (m *GetBlockByHeightResponse) GetBlock() *pb3.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type SendTransactionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionResponse) Reset()         { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()    {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{35}
}
func (m *SendTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionResponse.Unmarshal(m, b)
}
func (m *SendTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *SendTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionResponse.Merge(dst, src)
}
func (m *SendTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendTransactionResponse.Size(m)
}
func (m *SendTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionResponse proto.InternalMessageInfo

type SendBatchTransactionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendBatchTransactionResponse) Reset()         { *m = SendBatchTransactionResponse{} }
func (m *SendBatchTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendBatchTransactionResponse) ProtoMessage()    {}
func (*SendBatchTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{36}
}
func (m *SendBatchTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendBatchTransactionResponse.Unmarshal(m, b)
}
func (m *SendBatchTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendBatchTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *SendBatchTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendBatchTransactionResponse.Merge(dst, src)
}
func (m *SendBatchTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendBatchTransactionResponse.Size(m)
}
func (m *SendBatchTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendBatchTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendBatchTransactionResponse proto.InternalMessageInfo

type SendTransactionStatus struct {
	Txid                 []byte   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Code                 uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionStatus) Reset()         { *m = SendTransactionStatus{} }
func (m *SendTransactionStatus) String() string { return proto.CompactTextString(m) }
func (*SendTransactionStatus) ProtoMessage()    {}
func (*SendTransactionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{37}
}
func (m *SendTransactionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionStatus.Unmarshal(m, b)
}
func (m *SendTransactionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionStatus.Marshal(b, m, deterministic)
}
func (dst *SendTransactionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionStatus.Merge(dst, src)
}
func (m *SendTransactionStatus) XXX_Size() int {
	return xxx_messageInfo_SendTransactionStatus.Size(m)
}
func (m *SendTransactionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionStatus proto.InternalMessageInfo

func (m *SendTransactionStatus) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *SendTransactionStatus) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SendTransactionStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetNewTransactionResponse struct {
	Transaction          *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetNewTransactionResponse) Reset()         { *m = GetNewTransactionResponse{} }
func (m *GetNewTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewTransactionResponse) ProtoMessage()    {}
func (*GetNewTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{38}
}
func (m *GetNewTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewTransactionResponse.Unmarshal(m, b)
}
func (m *GetNewTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *GetNewTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewTransactionResponse.Merge(dst, src)
}
func (m *GetNewTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewTransactionResponse.Size(m)
}
func (m *GetNewTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewTransactionResponse proto.InternalMessageInfo

func (m *GetNewTransactionResponse) GetTransaction() *pb.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SubscribeResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{39}
}
func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (dst *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(dst, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GetAllTransactionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTransactionsRequest) Reset()         { *m = GetAllTransactionsRequest{} }
func (m *GetAllTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllTransactionsRequest) ProtoMessage()    {}
func (*GetAllTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{40}
}
func (m *GetAllTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTransactionsRequest.Unmarshal(m, b)
}
func (m *GetAllTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAllTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTransactionsRequest.Merge(dst, src)
}
func (m *GetAllTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllTransactionsRequest.Size(m)
}
func (m *GetAllTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTransactionsRequest proto.InternalMessageInfo

type GetAllTransactionsResponse struct {
	Transactions         []*pb.Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAllTransactionsResponse) Reset()         { *m = GetAllTransactionsResponse{} }
func (m *GetAllTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTransactionsResponse) ProtoMessage()    {}
func (*GetAllTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{41}
}
func (m *GetAllTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTransactionsResponse.Unmarshal(m, b)
}
func (m *GetAllTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *GetAllTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTransactionsResponse.Merge(dst, src)
}
func (m *GetAllTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllTransactionsResponse.Size(m)
}
func (m *GetAllTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTransactionsResponse proto.InternalMessageInfo

func (m *GetAllTransactionsResponse) GetTransactions() []*pb.Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetLastIrreversibleBlockResponse struct {
	Block                *pb3.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetLastIrreversibleBlockResponse) Reset()         { *m = GetLastIrreversibleBlockResponse{} }
func (m *GetLastIrreversibleBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastIrreversibleBlockResponse) ProtoMessage()    {}
func (*GetLastIrreversibleBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{42}
}
func (m *GetLastIrreversibleBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastIrreversibleBlockResponse.Unmarshal(m, b)
}
func (m *GetLastIrreversibleBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastIrreversibleBlockResponse.Marshal(b, m, deterministic)
}
func (dst *GetLastIrreversibleBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastIrreversibleBlockResponse.Merge(dst, src)
}
func (m *GetLastIrreversibleBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetLastIrreversibleBlockResponse.Size(m)
}
func (m *GetLastIrreversibleBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastIrreversibleBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastIrreversibleBlockResponse proto.InternalMessageInfo

func (m *GetLastIrreversibleBlockResponse) GetBlock() *pb3.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetStatsResponse struct {
	Stats                *pb4.Metrics `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetStatsResponse) Reset()         { *m = GetStatsResponse{} }
func (m *GetStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatsResponse) ProtoMessage()    {}
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{43}
}
func (m *GetStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsResponse.Unmarshal(m, b)
}
func (m *GetStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsResponse.Marshal(b, m, deterministic)
}
func (dst *GetStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsResponse.Merge(dst, src)
}
func (m *GetStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatsResponse.Size(m)
}
func (m *GetStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsResponse proto.InternalMessageInfo

func (m *GetStatsResponse) GetStats() *pb4.Metrics {
	if m != nil {
		return m.Stats
	}
	return nil
}

type GetNodeConfigResponse struct {
	TxPoolLimit          uint32   `protobuf:"varint,1,opt,name=tx_pool_limit,json=txPoolLimit,proto3" json:"tx_pool_limit,omitempty"`
	BlkSizeLimit         uint32   `protobuf:"varint,2,opt,name=blk_size_limit,json=blkSizeLimit,proto3" json:"blk_size_limit,omitempty"`
	MaxConnectionOut     uint32   `protobuf:"varint,3,opt,name=max_connection_out,json=maxConnectionOut,proto3" json:"max_connection_out,omitempty"`
	MaxConnectionIn      uint32   `protobuf:"varint,4,opt,name=max_connection_in,json=maxConnectionIn,proto3" json:"max_connection_in,omitempty"`
	ProducerAddress      string   `protobuf:"bytes,5,opt,name=producer_address,json=producerAddress,proto3" json:"producer_address,omitempty"`
	Producers            []string `protobuf:"bytes,6,rep,name=producers,proto3" json:"producers,omitempty"`
	MaxProducers         uint32   `protobuf:"varint,7,opt,name=max_producers,json=maxProducers,proto3" json:"max_producers,omitempty"`
	IpfsAddresses        []string `protobuf:"bytes,9,rep,name=ipfs_addresses,json=ipfsAddresses,proto3" json:"ipfs_addresses,omitempty"`
	RpcPort              uint32   `protobuf:"varint,10,opt,name=rpc_port,json=rpcPort,proto3" json:"rpc_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeConfigResponse) Reset()         { *m = GetNodeConfigResponse{} }
func (m *GetNodeConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeConfigResponse) ProtoMessage()    {}
func (*GetNodeConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{44}
}
func (m *GetNodeConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeConfigResponse.Unmarshal(m, b)
}
func (m *GetNodeConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeConfigResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeConfigResponse.Merge(dst, src)
}
func (m *GetNodeConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeConfigResponse.Size(m)
}
func (m *GetNodeConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeConfigResponse proto.InternalMessageInfo

func (m *GetNodeConfigResponse) GetTxPoolLimit() uint32 {
	if m != nil {
		return m.TxPoolLimit
	}
	return 0
}

func (m *GetNodeConfigResponse) GetBlkSizeLimit() uint32 {
	if m != nil {
		return m.BlkSizeLimit
	}
	return 0
}

func (m *GetNodeConfigResponse) GetMaxConnectionOut() uint32 {
	if m != nil {
		return m.MaxConnectionOut
	}
	return 0
}

func (m *GetNodeConfigResponse) GetMaxConnectionIn() uint32 {
	if m != nil {
		return m.MaxConnectionIn
	}
	return 0
}

func (m *GetNodeConfigResponse) GetProducerAddress() string {
	if m != nil {
		return m.ProducerAddress
	}
	return ""
}

func (m *GetNodeConfigResponse) GetProducers() []string {
	if m != nil {
		return m.Producers
	}
	return nil
}

func (m *GetNodeConfigResponse) GetMaxProducers() uint32 {
	if m != nil {
		return m.MaxProducers
	}
	return 0
}

func (m *GetNodeConfigResponse) GetIpfsAddresses() []string {
	if m != nil {
		return m.IpfsAddresses
	}
	return nil
}

func (m *GetNodeConfigResponse) GetRpcPort() uint32 {
	if m != nil {
		return m.RpcPort
	}
	return 0
}

type SetNodeConfigRequest struct {
	UpdatedConfigs       []SetNodeConfigRequest_ConfigType `protobuf:"varint,1,rep,packed,name=updated_configs,json=updatedConfigs,proto3,enum=rpcpb.SetNodeConfigRequest_ConfigType" json:"updated_configs,omitempty"`
	TxPoolLimit          uint32                            `protobuf:"varint,2,opt,name=tx_pool_limit,json=txPoolLimit,proto3" json:"tx_pool_limit,omitempty"`
	BlkSizeLimit         uint32                            `protobuf:"varint,3,opt,name=blk_size_limit,json=blkSizeLimit,proto3" json:"blk_size_limit,omitempty"`
	MaxConnectionOut     uint32                            `protobuf:"varint,4,opt,name=max_connection_out,json=maxConnectionOut,proto3" json:"max_connection_out,omitempty"`
	MaxConnectionIn      uint32                            `protobuf:"varint,5,opt,name=max_connection_in,json=maxConnectionIn,proto3" json:"max_connection_in,omitempty"`
	MaxProducers         uint32                            `protobuf:"varint,6,opt,name=max_producers,json=maxProducers,proto3" json:"max_producers,omitempty"`
	Producers            []string                          `protobuf:"bytes,7,rep,name=producers,proto3" json:"producers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SetNodeConfigRequest) Reset()         { *m = SetNodeConfigRequest{} }
func (m *SetNodeConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetNodeConfigRequest) ProtoMessage()    {}
func (*SetNodeConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{45}
}
func (m *SetNodeConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeConfigRequest.Unmarshal(m, b)
}
func (m *SetNodeConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeConfigRequest.Marshal(b, m, deterministic)
}
func (dst *SetNodeConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeConfigRequest.Merge(dst, src)
}
func (m *SetNodeConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetNodeConfigRequest.Size(m)
}
func (m *SetNodeConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeConfigRequest proto.InternalMessageInfo

func (m *SetNodeConfigRequest) GetUpdatedConfigs() []SetNodeConfigRequest_ConfigType {
	if m != nil {
		return m.UpdatedConfigs
	}
	return nil
}

func (m *SetNodeConfigRequest) GetTxPoolLimit() uint32 {
	if m != nil {
		return m.TxPoolLimit
	}
	return 0
}

func (m *SetNodeConfigRequest) GetBlkSizeLimit() uint32 {
	if m != nil {
		return m.BlkSizeLimit
	}
	return 0
}

func (m *SetNodeConfigRequest) GetMaxConnectionOut() uint32 {
	if m != nil {
		return m.MaxConnectionOut
	}
	return 0
}

func (m *SetNodeConfigRequest) GetMaxConnectionIn() uint32 {
	if m != nil {
		return m.MaxConnectionIn
	}
	return 0
}

func (m *SetNodeConfigRequest) GetMaxProducers() uint32 {
	if m != nil {
		return m.MaxProducers
	}
	return 0
}

func (m *SetNodeConfigRequest) GetProducers() []string {
	if m != nil {
		return m.Producers
	}
	return nil
}

type EstimateGasResponse struct {
	GasCount             []byte   `protobuf:"bytes,1,opt,name=gas_count,json=gasCount,proto3" json:"gas_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EstimateGasResponse) Reset()         { *m = EstimateGasResponse{} }
func (m *EstimateGasResponse) String() string { return proto.CompactTextString(m) }
func (*EstimateGasResponse) ProtoMessage()    {}
func (*EstimateGasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{46}
}
func (m *EstimateGasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateGasResponse.Unmarshal(m, b)
}
func (m *EstimateGasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateGasResponse.Marshal(b, m, deterministic)
}
func (dst *EstimateGasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateGasResponse.Merge(dst, src)
}
func (m *EstimateGasResponse) XXX_Size() int {
	return xxx_messageInfo_EstimateGasResponse.Size(m)
}
func (m *EstimateGasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateGasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateGasResponse proto.InternalMessageInfo

func (m *EstimateGasResponse) GetGasCount() []byte {
	if m != nil {
		return m.GasCount
	}
	return nil
}

type GasPriceResponse struct {
	GasPrice             []byte   `protobuf:"bytes,1,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasPriceResponse) Reset()         { *m = GasPriceResponse{} }
func (m *GasPriceResponse) String() string { return proto.CompactTextString(m) }
func (*GasPriceResponse) ProtoMessage()    {}
func (*GasPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_0a7fbb798bd884f8, []int{47}
}
func (m *GasPriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasPriceResponse.Unmarshal(m, b)
}
func (m *GasPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasPriceResponse.Marshal(b, m, deterministic)
}
func (dst *GasPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasPriceResponse.Merge(dst, src)
}
func (m *GasPriceResponse) XXX_Size() int {
	return xxx_messageInfo_GasPriceResponse.Size(m)
}
func (m *GasPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GasPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GasPriceResponse proto.InternalMessageInfo

func (m *GasPriceResponse) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateAccountRequest)(nil), "rpcpb.CreateAccountRequest")
	proto.RegisterType((*UnlockAccountRequest)(nil), "rpcpb.UnlockAccountRequest")
	proto.RegisterType((*AddProducerRequest)(nil), "rpcpb.AddProducerRequest")
	proto.RegisterType((*GetBalanceRequest)(nil), "rpcpb.GetBalanceRequest")
	proto.RegisterType((*SendFromMinerRequest)(nil), "rpcpb.SendFromMinerRequest")
	proto.RegisterType((*SendRequest)(nil), "rpcpb.SendRequest")
	proto.RegisterType((*GetPeerInfoRequest)(nil), "rpcpb.GetPeerInfoRequest")
	proto.RegisterType((*GetBlockchainInfoRequest)(nil), "rpcpb.GetBlockchainInfoRequest")
	proto.RegisterType((*AddPeerRequest)(nil), "rpcpb.AddPeerRequest")
	proto.RegisterType((*GetVersionRequest)(nil), "rpcpb.GetVersionRequest")
	proto.RegisterType((*GetUTXORequest)(nil), "rpcpb.GetUTXORequest")
	proto.RegisterType((*GetBlocksRequest)(nil), "rpcpb.GetBlocksRequest")
	proto.RegisterType((*GetBlockByHashRequest)(nil), "rpcpb.GetBlockByHashRequest")
	proto.RegisterType((*GetBlockByHeightRequest)(nil), "rpcpb.GetBlockByHeightRequest")
	proto.RegisterType((*SendTransactionRequest)(nil), "rpcpb.SendTransactionRequest")
	proto.RegisterType((*SendBatchTransactionRequest)(nil), "rpcpb.SendBatchTransactionRequest")
	proto.RegisterType((*GetNewTransactionRequest)(nil), "rpcpb.GetNewTransactionRequest")
	proto.RegisterType((*SubscribeRequest)(nil), "rpcpb.SubscribeRequest")
	proto.RegisterType((*MetricsServiceRequest)(nil), "rpcpb.MetricsServiceRequest")
	proto.RegisterType((*GetLastIrreversibleBlockRequest)(nil), "rpcpb.GetLastIrreversibleBlockRequest")
	proto.RegisterType((*EstimateGasRequest)(nil), "rpcpb.EstimateGasRequest")
	proto.RegisterType((*GasPriceRequest)(nil), "rpcpb.GasPriceRequest")
	proto.RegisterType((*AddProducerResponse)(nil), "rpcpb.AddProducerResponse")
	proto.RegisterType((*UnlockAccountResponse)(nil), "rpcpb.UnlockAccountResponse")
	proto.RegisterType((*GetBalanceResponse)(nil), "rpcpb.GetBalanceResponse")
	proto.RegisterType((*SendFromMinerResponse)(nil), "rpcpb.SendFromMinerResponse")
	proto.RegisterType((*SendResponse)(nil), "rpcpb.SendResponse")
	proto.RegisterType((*GetPeerInfoResponse)(nil), "rpcpb.GetPeerInfoResponse")
	proto.RegisterType((*GetBlockchainInfoResponse)(nil), "rpcpb.GetBlockchainInfoResponse")
	proto.RegisterType((*AddPeerResponse)(nil), "rpcpb.AddPeerResponse")
	proto.RegisterType((*GetVersionResponse)(nil), "rpcpb.GetVersionResponse")
	proto.RegisterType((*GetUTXOResponse)(nil), "rpcpb.GetUTXOResponse")
	proto.RegisterType((*GetBlocksResponse)(nil), "rpcpb.GetBlocksResponse")
	proto.RegisterType((*GetBlockByHashResponse)(nil), "rpcpb.GetBlockByHashResponse")
	proto.RegisterType((*GetBlockByHeightResponse)(nil), "rpcpb.GetBlockByHeightResponse")
	proto.RegisterType((*SendTransactionResponse)(nil), "rpcpb.SendTransactionResponse")
	proto.RegisterType((*SendBatchTransactionResponse)(nil), "rpcpb.SendBatchTransactionResponse")
	proto.RegisterType((*SendTransactionStatus)(nil), "rpcpb.SendTransactionStatus")
	proto.RegisterType((*GetNewTransactionResponse)(nil), "rpcpb.GetNewTransactionResponse")
	proto.RegisterType((*SubscribeResponse)(nil), "rpcpb.SubscribeResponse")
	proto.RegisterType((*GetAllTransactionsRequest)(nil), "rpcpb.GetAllTransactionsRequest")
	proto.RegisterType((*GetAllTransactionsResponse)(nil), "rpcpb.GetAllTransactionsResponse")
	proto.RegisterType((*GetLastIrreversibleBlockResponse)(nil), "rpcpb.GetLastIrreversibleBlockResponse")
	proto.RegisterType((*GetStatsResponse)(nil), "rpcpb.GetStatsResponse")
	proto.RegisterType((*GetNodeConfigResponse)(nil), "rpcpb.GetNodeConfigResponse")
	proto.RegisterType((*SetNodeConfigRequest)(nil), "rpcpb.SetNodeConfigRequest")
	proto.RegisterType((*EstimateGasResponse)(nil), "rpcpb.EstimateGasResponse")
	proto.RegisterType((*GasPriceResponse)(nil), "rpcpb.GasPriceResponse")
	proto.RegisterEnum("rpcpb.SetNodeConfigRequest_ConfigType", SetNodeConfigRequest_ConfigType_name, SetNodeConfigRequest_ConfigType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcServiceClient is the client API for RpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcServiceClient interface {
	RpcGetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
	RpcGetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	RpcGetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error)
	RpcGetUTXO(ctx context.Context, in *GetUTXORequest, opts ...grpc.CallOption) (*GetUTXOResponse, error)
	RpcGetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error)
	RpcGetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockByHashResponse, error)
	RpcGetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockByHeightResponse, error)
	RpcSendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	RpcSendBatchTransaction(ctx context.Context, in *SendBatchTransactionRequest, opts ...grpc.CallOption) (*SendBatchTransactionResponse, error)
	RpcGetNewTransaction(ctx context.Context, in *GetNewTransactionRequest, opts ...grpc.CallOption) (RpcService_RpcGetNewTransactionClient, error)
	RpcSubscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (RpcService_RpcSubscribeClient, error)
	RpcGetAllTransactionsFromTxPool(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*GetAllTransactionsResponse, error)
	RpcGetLastIrreversibleBlock(ctx context.Context, in *GetLastIrreversibleBlockRequest, opts ...grpc.CallOption) (*GetLastIrreversibleBlockResponse, error)
	RpcEstimateGas(ctx context.Context, in *EstimateGasRequest, opts ...grpc.CallOption) (*EstimateGasResponse, error)
	RpcGasPrice(ctx context.Context, in *GasPriceRequest, opts ...grpc.CallOption) (*GasPriceResponse, error)
}

type rpcServiceClient struct {
	cc *grpc.ClientConn
}

func NewRpcServiceClient(cc *grpc.ClientConn) RpcServiceClient {
	return &rpcServiceClient{cc}
}

func (c *rpcServiceClient) RpcGetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error) {
	out := new(GetBlockchainInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockchainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetUTXO(ctx context.Context, in *GetUTXORequest, opts ...grpc.CallOption) (*GetUTXOResponse, error) {
	out := new(GetUTXOResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetUTXO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error) {
	out := new(GetBlocksResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockByHashResponse, error) {
	out := new(GetBlockByHashResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockByHeightResponse, error) {
	out := new(GetBlockByHeightResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcSendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcSendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcSendBatchTransaction(ctx context.Context, in *SendBatchTransactionRequest, opts ...grpc.CallOption) (*SendBatchTransactionResponse, error) {
	out := new(SendBatchTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcSendBatchTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetNewTransaction(ctx context.Context, in *GetNewTransactionRequest, opts ...grpc.CallOption) (RpcService_RpcGetNewTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcService_serviceDesc.Streams[0], "/rpcpb.RpcService/RpcGetNewTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcServiceRpcGetNewTransactionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RpcService_RpcGetNewTransactionClient interface {
	Recv() (*GetNewTransactionResponse, error)
	grpc.ClientStream
}

type rpcServiceRpcGetNewTransactionClient struct {
	grpc.ClientStream
}

func (x *rpcServiceRpcGetNewTransactionClient) Recv() (*GetNewTransactionResponse, error) {
	m := new(GetNewTransactionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rpcServiceClient) RpcSubscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (RpcService_RpcSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcService_serviceDesc.Streams[1], "/rpcpb.RpcService/RpcSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcServiceRpcSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RpcService_RpcSubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type rpcServiceRpcSubscribeClient struct {
	grpc.ClientStream
}

func (x *rpcServiceRpcSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rpcServiceClient) RpcGetAllTransactionsFromTxPool(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*GetAllTransactionsResponse, error) {
	out := new(GetAllTransactionsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetAllTransactionsFromTxPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetLastIrreversibleBlock(ctx context.Context, in *GetLastIrreversibleBlockRequest, opts ...grpc.CallOption) (*GetLastIrreversibleBlockResponse, error) {
	out := new(GetLastIrreversibleBlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetLastIrreversibleBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcEstimateGas(ctx context.Context, in *EstimateGasRequest, opts ...grpc.CallOption) (*EstimateGasResponse, error) {
	out := new(EstimateGasResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcEstimateGas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGasPrice(ctx context.Context, in *GasPriceRequest, opts ...grpc.CallOption) (*GasPriceResponse, error) {
	out := new(GasPriceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGasPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcServiceServer is the server API for RpcService service.
type RpcServiceServer interface {
	RpcGetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
	RpcGetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	RpcGetBlockchainInfo(context.Context, *GetBlockchainInfoRequest) (*GetBlockchainInfoResponse, error)
	RpcGetUTXO(context.Context, *GetUTXORequest) (*GetUTXOResponse, error)
	RpcGetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error)
	RpcGetBlockByHash(context.Context, *GetBlockByHashRequest) (*GetBlockByHashResponse, error)
	RpcGetBlockByHeight(context.Context, *GetBlockByHeightRequest) (*GetBlockByHeightResponse, error)
	RpcSendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionResponse, error)
	RpcSendBatchTransaction(context.Context, *SendBatchTransactionRequest) (*SendBatchTransactionResponse, error)
	RpcGetNewTransaction(*GetNewTransactionRequest, RpcService_RpcGetNewTransactionServer) error
	RpcSubscribe(*SubscribeRequest, RpcService_RpcSubscribeServer) error
	RpcGetAllTransactionsFromTxPool(context.Context, *GetAllTransactionsRequest) (*GetAllTransactionsResponse, error)
	RpcGetLastIrreversibleBlock(context.Context, *GetLastIrreversibleBlockRequest) (*GetLastIrreversibleBlockResponse, error)
	RpcEstimateGas(context.Context, *EstimateGasRequest) (*EstimateGasResponse, error)
	RpcGasPrice(context.Context, *GasPriceRequest) (*GasPriceResponse, error)
}

func RegisterRpcServiceServer(s *grpc.Server, srv RpcServiceServer) {
	s.RegisterService(&_RpcService_serviceDesc, srv)
}

func _RpcService_RpcGetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockchainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockchainInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockchainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockchainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockchainInfo(ctx, req.(*GetBlockchainInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetUTXO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUTXORequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetUTXO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetUTXO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetUTXO(ctx, req.(*GetUTXORequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlocks(ctx, req.(*GetBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockByHash(ctx, req.(*GetBlockByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockByHeight(ctx, req.(*GetBlockByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcSendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcSendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcSendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcSendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcSendBatchTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendBatchTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcSendBatchTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcSendBatchTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcSendBatchTransaction(ctx, req.(*SendBatchTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetNewTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetNewTransactionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RpcServiceServer).RpcGetNewTransaction(m, &rpcServiceRpcGetNewTransactionServer{stream})
}

type RpcService_RpcGetNewTransactionServer interface {
	Send(*GetNewTransactionResponse) error
	grpc.ServerStream
}

type rpcServiceRpcGetNewTransactionServer struct {
	grpc.ServerStream
}

func (x *rpcServiceRpcGetNewTransactionServer) Send(m *GetNewTransactionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RpcService_RpcSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RpcServiceServer).RpcSubscribe(m, &rpcServiceRpcSubscribeServer{stream})
}

type RpcService_RpcSubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type rpcServiceRpcSubscribeServer struct {
	grpc.ServerStream
}

func (x *rpcServiceRpcSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RpcService_RpcGetAllTransactionsFromTxPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetAllTransactionsFromTxPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetAllTransactionsFromTxPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetAllTransactionsFromTxPool(ctx, req.(*GetAllTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetLastIrreversibleBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastIrreversibleBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetLastIrreversibleBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetLastIrreversibleBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetLastIrreversibleBlock(ctx, req.(*GetLastIrreversibleBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcEstimateGas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstimateGasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcEstimateGas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcEstimateGas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcEstimateGas(ctx, req.(*EstimateGasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGasPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GasPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGasPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGasPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGasPrice(ctx, req.(*GasPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.RpcService",
	HandlerType: (*RpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcGetVersion",
			Handler:    _RpcService_RpcGetVersion_Handler,
		},
		{
			MethodName: "RpcGetBalance",
			Handler:    _RpcService_RpcGetBalance_Handler,
		},
		{
			MethodName: "RpcGetBlockchainInfo",
			Handler:    _RpcService_RpcGetBlockchainInfo_Handler,
		},
		{
			MethodName: "RpcGetUTXO",
			Handler:    _RpcService_RpcGetUTXO_Handler,
		},
		{
			MethodName: "RpcGetBlocks",
			Handler:    _RpcService_RpcGetBlocks_Handler,
		},
		{
			MethodName: "RpcGetBlockByHash",
			Handler:    _RpcService_RpcGetBlockByHash_Handler,
		},
		{
			MethodName: "RpcGetBlockByHeight",
			Handler:    _RpcService_RpcGetBlockByHeight_Handler,
		},
		{
			MethodName: "RpcSendTransaction",
			Handler:    _RpcService_RpcSendTransaction_Handler,
		},
		{
			MethodName: "RpcSendBatchTransaction",
			Handler:    _RpcService_RpcSendBatchTransaction_Handler,
		},
		{
			MethodName: "RpcGetAllTransactionsFromTxPool",
			Handler:    _RpcService_RpcGetAllTransactionsFromTxPool_Handler,
		},
		{
			MethodName: "RpcGetLastIrreversibleBlock",
			Handler:    _RpcService_RpcGetLastIrreversibleBlock_Handler,
		},
		{
			MethodName: "RpcEstimateGas",
			Handler:    _RpcService_RpcEstimateGas_Handler,
		},
		{
			MethodName: "RpcGasPrice",
			Handler:    _RpcService_RpcGasPrice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RpcGetNewTransaction",
			Handler:       _RpcService_RpcGetNewTransaction_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RpcSubscribe",
			Handler:       _RpcService_RpcSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/dappley/go-dappley/rpc/pb/rpc.proto",
}

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminServiceClient interface {
	RpcAddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error)
	RpcSend(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
	RpcGetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error)
	RpcSendFromMiner(ctx context.Context, in *SendFromMinerRequest, opts ...grpc.CallOption) (*SendFromMinerResponse, error)
	RpcAddProducer(ctx context.Context, in *AddProducerRequest, opts ...grpc.CallOption) (*AddProducerResponse, error)
	RpcUnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error)
}

type adminServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminServiceClient(cc *grpc.ClientConn) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) RpcAddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error) {
	out := new(AddPeerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcAddPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcSend(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcGetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error) {
	out := new(GetPeerInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcGetPeerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcSendFromMiner(ctx context.Context, in *SendFromMinerRequest, opts ...grpc.CallOption) (*SendFromMinerResponse, error) {
	out := new(SendFromMinerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcSendFromMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcAddProducer(ctx context.Context, in *AddProducerRequest, opts ...grpc.CallOption) (*AddProducerResponse, error) {
	out := new(AddProducerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcAddProducer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcUnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error) {
	out := new(UnlockAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcUnlockAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
type AdminServiceServer interface {
	RpcAddPeer(context.Context, *AddPeerRequest) (*AddPeerResponse, error)
	RpcSend(context.Context, *SendRequest) (*SendResponse, error)
	RpcGetPeerInfo(context.Context, *GetPeerInfoRequest) (*GetPeerInfoResponse, error)
	RpcSendFromMiner(context.Context, *SendFromMinerRequest) (*SendFromMinerResponse, error)
	RpcAddProducer(context.Context, *AddProducerRequest) (*AddProducerResponse, error)
	RpcUnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error)
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_RpcAddPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcAddPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcAddPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcAddPeer(ctx, req.(*AddPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcSend(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcGetPeerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcGetPeerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcGetPeerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcGetPeerInfo(ctx, req.(*GetPeerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcSendFromMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFromMinerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcSendFromMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcSendFromMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcSendFromMiner(ctx, req.(*SendFromMinerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcAddProducer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProducerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcAddProducer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcAddProducer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcAddProducer(ctx, req.(*AddProducerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcUnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcUnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcUnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcUnlockAccount(ctx, req.(*UnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcAddPeer",
			Handler:    _AdminService_RpcAddPeer_Handler,
		},
		{
			MethodName: "RpcSend",
			Handler:    _AdminService_RpcSend_Handler,
		},
		{
			MethodName: "RpcGetPeerInfo",
			Handler:    _AdminService_RpcGetPeerInfo_Handler,
		},
		{
			MethodName: "RpcSendFromMiner",
			Handler:    _AdminService_RpcSendFromMiner_Handler,
		},
		{
			MethodName: "RpcAddProducer",
			Handler:    _AdminService_RpcAddProducer_Handler,
		},
		{
			MethodName: "RpcUnlockAccount",
			Handler:    _AdminService_RpcUnlockAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/dappley/go-dappley/rpc/pb/rpc.proto",
}

// MetricServiceClient is the client API for MetricService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricServiceClient interface {
	RpcGetStats(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetStatsResponse, error)
	RpcGetNodeConfig(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error)
	RpcSetNodeConfig(ctx context.Context, in *SetNodeConfigRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error)
}

type metricServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetricServiceClient(cc *grpc.ClientConn) MetricServiceClient {
	return &metricServiceClient{cc}
}

func (c *metricServiceClient) RpcGetStats(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetStatsResponse, error) {
	out := new(GetStatsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.MetricService/RpcGetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) RpcGetNodeConfig(ctx context.Context, in *MetricsServiceRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error) {
	out := new(GetNodeConfigResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.MetricService/RpcGetNodeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) RpcSetNodeConfig(ctx context.Context, in *SetNodeConfigRequest, opts ...grpc.CallOption) (*GetNodeConfigResponse, error) {
	out := new(GetNodeConfigResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.MetricService/RpcSetNodeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetricServiceServer is the server API for MetricService service.
type MetricServiceServer interface {
	RpcGetStats(context.Context, *MetricsServiceRequest) (*GetStatsResponse, error)
	RpcGetNodeConfig(context.Context, *MetricsServiceRequest) (*GetNodeConfigResponse, error)
	RpcSetNodeConfig(context.Context, *SetNodeConfigRequest) (*GetNodeConfigResponse, error)
}

func RegisterMetricServiceServer(s *grpc.Server, srv MetricServiceServer) {
	s.RegisterService(&_MetricService_serviceDesc, srv)
}

func _MetricService_RpcGetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RpcGetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.MetricService/RpcGetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RpcGetStats(ctx, req.(*MetricsServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_RpcGetNodeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RpcGetNodeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.MetricService/RpcGetNodeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RpcGetNodeConfig(ctx, req.(*MetricsServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_RpcSetNodeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RpcSetNodeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.MetricService/RpcSetNodeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RpcSetNodeConfig(ctx, req.(*SetNodeConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetricService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.MetricService",
	HandlerType: (*MetricServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcGetStats",
			Handler:    _MetricService_RpcGetStats_Handler,
		},
		{
			MethodName: "RpcGetNodeConfig",
			Handler:    _MetricService_RpcGetNodeConfig_Handler,
		},
		{
			MethodName: "RpcSetNodeConfig",
			Handler:    _MetricService_RpcSetNodeConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/dappley/go-dappley/rpc/pb/rpc.proto",
}

func init() {
	proto.RegisterFile("github.com/dappley/go-dappley/rpc/pb/rpc.proto", fileDescriptor_rpc_0a7fbb798bd884f8)
}

var fileDescriptor_rpc_0a7fbb798bd884f8 = []byte{
	// 1965 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xeb, 0x72, 0xdb, 0xc6,
	0x15, 0x16, 0x49, 0x51, 0x12, 0x0f, 0x2f, 0xa2, 0x56, 0x37, 0x1a, 0x72, 0x7c, 0x81, 0x13, 0xc7,
	0x75, 0x1d, 0x2a, 0x95, 0x7b, 0x49, 0xa7, 0xa9, 0x27, 0x92, 0xea, 0xc8, 0x9a, 0x4a, 0x22, 0x07,
	0x92, 0x52, 0xa7, 0xad, 0x87, 0x05, 0xc1, 0x95, 0x88, 0x31, 0x09, 0xa0, 0xd8, 0xa5, 0x43, 0xe7,
	0x71, 0xf2, 0x1a, 0x7d, 0x81, 0xfe, 0xe8, 0x9b, 0xf4, 0x01, 0x3a, 0xd3, 0x5f, 0x9d, 0xbd, 0x62,
	0x01, 0x42, 0x17, 0x8f, 0xfb, 0x8b, 0xc0, 0xd9, 0x73, 0xbe, 0x5d, 0x9c, 0xcb, 0xb7, 0xe7, 0x10,
	0xda, 0x97, 0x3e, 0x1d, 0x4e, 0xfa, 0x6d, 0x2f, 0x1c, 0x6f, 0x0f, 0xdc, 0x28, 0x1a, 0xe1, 0xf7,
	0xdb, 0x97, 0xe1, 0x17, 0xea, 0x31, 0x8e, 0xbc, 0xed, 0xa8, 0xcf, 0x7e, 0xda, 0x51, 0x1c, 0xd2,
	0x10, 0x95, 0xe3, 0xc8, 0x8b, 0xfa, 0xd6, 0x6f, 0xae, 0x37, 0xf3, 0xc2, 0x18, 0x6f, 0xf7, 0x47,
	0xa1, 0xf7, 0x96, 0x59, 0xf3, 0x07, 0x61, 0x6f, 0xed, 0xdf, 0xc2, 0x90, 0xc6, 0x6e, 0x40, 0x5c,
	0x8f, 0xfa, 0x61, 0xc0, 0xcc, 0x8d, 0x57, 0x09, 0xf2, 0xab, 0x5b, 0x80, 0x4c, 0xe8, 0x34, 0x64,
	0xd6, 0xec, 0x57, 0x9a, 0x3d, 0xbf, 0xde, 0x2c, 0xc0, 0xf4, 0x87, 0x30, 0xe6, 0x27, 0x8e, 0x30,
	0x8e, 0xa5, 0xd1, 0x57, 0xd7, 0x1b, 0x8d, 0x31, 0x8d, 0x7d, 0x8f, 0x30, 0xa3, 0x81, 0x4b, 0x5d,
	0x42, 0xc3, 0x18, 0x0b, 0x4b, 0xfb, 0xd7, 0xb0, 0xb6, 0x1f, 0x63, 0x97, 0xe2, 0x5d, 0xcf, 0x0b,
	0x27, 0x01, 0x75, 0xf0, 0xdf, 0x27, 0x98, 0x50, 0x74, 0x0f, 0x20, 0x72, 0x09, 0x89, 0x86, 0xb1,
	0x4b, 0x70, 0xab, 0xf0, 0xa0, 0xf0, 0xa4, 0xe2, 0x18, 0x12, 0x7b, 0x03, 0xd6, 0xce, 0x03, 0xe6,
	0xb2, 0xb4, 0x9d, 0xdd, 0x06, 0xb4, 0x3b, 0x18, 0x74, 0xe3, 0x70, 0x30, 0xf1, 0x70, 0xac, 0xd0,
	0x5a, 0xb0, 0xe8, 0x0e, 0x06, 0x31, 0x26, 0x44, 0x42, 0xa9, 0x57, 0xfb, 0x0b, 0x58, 0x39, 0xc0,
	0x74, 0xcf, 0x1d, 0xb9, 0x81, 0x87, 0x6f, 0x56, 0x7f, 0x01, 0x6b, 0xa7, 0x38, 0x18, 0x7c, 0x1b,
	0x87, 0xe3, 0x63, 0x3f, 0x48, 0x36, 0x68, 0x40, 0x91, 0x86, 0x52, 0xb9, 0x48, 0x43, 0xb4, 0x01,
	0x0b, 0xee, 0x98, 0x9d, 0xab, 0x55, 0x7c, 0x50, 0x78, 0x52, 0x73, 0xe4, 0x9b, 0xfd, 0xaf, 0x02,
	0x54, 0x19, 0x80, 0xb2, 0x43, 0x30, 0x7f, 0x11, 0x87, 0x63, 0x69, 0xc9, 0x9f, 0x25, 0x56, 0x31,
	0x07, 0xab, 0x64, 0x62, 0xa1, 0x87, 0x50, 0x73, 0xc5, 0xc7, 0xf7, 0x22, 0x97, 0x0e, 0x5b, 0xf3,
	0xdc, 0xa2, 0x2a, 0x65, 0x5d, 0x97, 0x0e, 0x51, 0x13, 0x4a, 0xd4, 0x8f, 0x5a, 0x65, 0x6e, 0xc7,
	0x1e, 0xd9, 0x86, 0x2c, 0x04, 0xad, 0x05, 0xb1, 0x21, 0x7b, 0x46, 0x5b, 0x50, 0xb9, 0x74, 0x49,
	0x6f, 0xe4, 0x8f, 0x7d, 0xda, 0x5a, 0xe4, 0xba, 0x4b, 0x97, 0x2e, 0x39, 0x62, 0xef, 0x6a, 0x31,
	0x8a, 0x7d, 0x0f, 0xb7, 0x96, 0xf4, 0x62, 0x97, 0xbd, 0xdb, 0x6b, 0x80, 0x0e, 0x30, 0xed, 0x62,
	0x1c, 0x1f, 0x06, 0x17, 0xa1, 0x8a, 0x81, 0x05, 0x2d, 0xe6, 0x53, 0x16, 0x1d, 0x6f, 0xe8, 0xfa,
	0x81, 0xb9, 0xf6, 0x1c, 0x1a, 0x2c, 0x3e, 0x38, 0x71, 0xdd, 0x43, 0xa8, 0x5d, 0x4c, 0x46, 0xa3,
	0x5e, 0xda, 0xe3, 0x55, 0x26, 0xdb, 0x95, 0x5e, 0xff, 0x8a, 0x07, 0xe9, 0x3b, 0x1c, 0x13, 0x3f,
	0x0c, 0x94, 0xdd, 0x23, 0xa8, 0xf3, 0x14, 0xea, 0xbd, 0x13, 0x72, 0x69, 0x58, 0xe3, 0x42, 0xa9,
	0x6b, 0x3f, 0x85, 0xc6, 0x01, 0xa6, 0xe7, 0x67, 0xaf, 0x3b, 0x37, 0xc7, 0xf6, 0x0d, 0x34, 0xd5,
	0xb1, 0x89, 0xd2, 0x7e, 0x06, 0x88, 0x50, 0x37, 0xa6, 0x3d, 0x5e, 0x9e, 0xbd, 0xa1, 0x4b, 0x86,
	0x98, 0x19, 0x96, 0x9e, 0xd4, 0x9c, 0x26, 0x5f, 0xe1, 0xfa, 0xaf, 0xb8, 0x9c, 0xf9, 0x6a, 0xec,
	0x4e, 0x7b, 0x9e, 0x0e, 0x7c, 0xd9, 0x59, 0x1a, 0xbb, 0xd3, 0x7d, 0x1e, 0xfa, 0x9f, 0xc3, 0xba,
	0x82, 0xdf, 0x7b, 0xcf, 0x0c, 0x8c, 0x1c, 0x60, 0xb8, 0xfc, 0x38, 0x35, 0x87, 0x3f, 0xdb, 0xbf,
	0x80, 0x4d, 0x43, 0x19, 0xfb, 0x97, 0x43, 0x5d, 0x19, 0x1b, 0xb0, 0x30, 0xe4, 0x02, 0x6e, 0x30,
	0xef, 0xc8, 0x37, 0xfb, 0x3b, 0xd8, 0x60, 0x99, 0x75, 0x96, 0x10, 0x81, 0xb2, 0xf8, 0x1a, 0xaa,
	0x06, 0x3d, 0x70, 0xb3, 0xea, 0x8e, 0xd5, 0x36, 0x64, 0x51, 0xbf, 0x6d, 0xda, 0x99, 0xea, 0xf6,
	0x1b, 0xd8, 0x62, 0xb8, 0x7b, 0x2e, 0xf5, 0x86, 0x39, 0xe0, 0x2f, 0xa0, 0x66, 0x68, 0x0b, 0xdf,
	0x5c, 0x8f, 0x9e, 0xd2, 0x97, 0xc9, 0x72, 0x82, 0x7f, 0x98, 0xc5, 0xb6, 0x9f, 0x42, 0xf3, 0x74,
	0xd2, 0x27, 0x5e, 0xec, 0xf7, 0xb1, 0xf1, 0xf9, 0x34, 0x8c, 0x7c, 0x4f, 0xec, 0x54, 0x71, 0xe4,
	0x9b, 0xbd, 0x09, 0xeb, 0xc7, 0x82, 0x66, 0x4e, 0x71, 0xfc, 0xce, 0xd7, 0xc5, 0x6c, 0x3f, 0x84,
	0xfb, 0x07, 0x98, 0x1e, 0xb9, 0x84, 0x1e, 0xc6, 0x31, 0xe6, 0xc9, 0xd2, 0x1f, 0x61, 0xee, 0x5a,
	0xa5, 0xe2, 0x00, 0x7a, 0x49, 0xa8, 0x3f, 0x76, 0x29, 0x3e, 0x70, 0xc9, 0xff, 0xc7, 0x6d, 0x2b,
	0xb0, 0x7c, 0x20, 0xcb, 0x44, 0x6d, 0xb3, 0x0e, 0xab, 0x29, 0x6e, 0x22, 0x51, 0x18, 0x10, 0xcc,
	0x4e, 0x9e, 0xa1, 0x32, 0xb9, 0xf0, 0x8c, 0x57, 0x97, 0xe6, 0x26, 0x21, 0x35, 0xe8, 0x80, 0x9d,
	0xa8, 0xa4, 0xa9, 0x65, 0x13, 0xd6, 0x33, 0xd4, 0x24, 0x61, 0x8e, 0xa1, 0x26, 0x28, 0x47, 0x02,
	0xfc, 0x0c, 0x9a, 0x5e, 0x18, 0xd0, 0xd8, 0xf5, 0x68, 0xa6, 0xe8, 0x96, 0x95, 0x5c, 0x16, 0x1e,
	0x4b, 0x4d, 0x3a, 0xf5, 0x07, 0x92, 0x8c, 0xf8, 0xb3, 0x7d, 0x00, 0xab, 0xa9, 0x9a, 0x97, 0xa8,
	0x5f, 0x42, 0x85, 0x5d, 0x08, 0xbd, 0x91, 0x4f, 0xa8, 0x4c, 0x82, 0xd5, 0xb6, 0xbc, 0x2d, 0xa2,
	0x7e, 0x5b, 0xeb, 0x2f, 0x31, 0xad, 0x23, 0x9f, 0x50, 0xfb, 0xa7, 0x02, 0xdc, 0xc9, 0xe1, 0x09,
	0x89, 0xf7, 0x18, 0x96, 0xa9, 0xeb, 0x8f, 0x8c, 0xc2, 0x93, 0x05, 0x52, 0x67, 0x62, 0x5d, 0x75,
	0x8c, 0x3e, 0xa4, 0x8a, 0x28, 0x8a, 0x22, 0x2f, 0x8a, 0x2a, 0x97, 0x89, 0xc2, 0x41, 0x77, 0xa1,
	0x12, 0x49, 0xa7, 0x93, 0x56, 0x89, 0x67, 0x4d, 0x22, 0x60, 0xab, 0xd4, 0x1f, 0x63, 0x42, 0xdd,
	0x71, 0xc4, 0x39, 0xb4, 0xe4, 0x24, 0x02, 0x16, 0x46, 0xcd, 0x57, 0xd2, 0x9f, 0x7f, 0xe3, 0x61,
	0xd1, 0x6c, 0x24, 0xcf, 0x7b, 0x1b, 0x3a, 0x42, 0x9f, 0x41, 0x83, 0xe0, 0xf8, 0x1d, 0x8e, 0xb5,
	0x96, 0xf0, 0x6c, 0x5d, 0x48, 0x15, 0x6b, 0x45, 0xb0, 0xac, 0x59, 0x4b, 0xc2, 0xdb, 0x50, 0x66,
	0x97, 0xb4, 0xaa, 0xaf, 0x5a, 0x9b, 0xbd, 0x45, 0xfd, 0xf6, 0x39, 0x9d, 0x86, 0x8e, 0x58, 0x42,
	0xbf, 0x85, 0xba, 0x72, 0x85, 0x3b, 0x60, 0xdf, 0x5a, 0xe4, 0xba, 0x6b, 0x6d, 0x2e, 0x8d, 0xfa,
	0x6d, 0xe1, 0x35, 0xbe, 0xe8, 0xd4, 0xfa, 0xc9, 0x0b, 0xb1, 0x7f, 0x27, 0xae, 0x41, 0xc9, 0x7d,
	0x3a, 0x04, 0x0b, 0x5c, 0x49, 0x6d, 0xda, 0x48, 0x03, 0x39, 0x72, 0xd5, 0x7e, 0x01, 0x1b, 0x59,
	0x66, 0x93, 0x08, 0x9f, 0x42, 0x99, 0xeb, 0xc8, 0xe2, 0xc9, 0x02, 0x88, 0x45, 0xfb, 0x9b, 0xe4,
	0xbe, 0x48, 0xc8, 0xee, 0x83, 0x10, 0xee, 0xc0, 0xe6, 0x0c, 0xf7, 0xc9, 0x68, 0xdd, 0x83, 0xbb,
	0xf9, 0xf4, 0x25, 0xd7, 0xbf, 0x17, 0x65, 0x63, 0x2c, 0x9d, 0x52, 0x97, 0x4e, 0x92, 0xdc, 0x97,
	0xb4, 0xcc, 0x9e, 0x99, 0xcc, 0x0b, 0x07, 0x98, 0x47, 0xad, 0xee, 0xf0, 0x67, 0x76, 0xa1, 0x8c,
	0x31, 0x21, 0xee, 0x25, 0xe6, 0xf7, 0x73, 0xc5, 0x51, 0xaf, 0xf6, 0xf7, 0x3c, 0xbf, 0xb3, 0xd4,
	0x26, 0x3f, 0xec, 0xe3, 0xd8, 0xe5, 0x73, 0x58, 0x31, 0x98, 0x51, 0x42, 0xaa, 0xbb, 0xbd, 0x90,
	0xdc, 0xed, 0xf6, 0x16, 0x3f, 0xc3, 0xee, 0x68, 0x64, 0x40, 0x29, 0x86, 0xb3, 0xff, 0x0a, 0x56,
	0xde, 0xa2, 0x84, 0xfb, 0x58, 0x66, 0x7f, 0x05, 0x0f, 0xae, 0x26, 0xde, 0x0f, 0x0a, 0xef, 0xd7,
	0xfc, 0x66, 0x66, 0x71, 0x49, 0x4e, 0xf7, 0x04, 0xca, 0x84, 0x09, 0xa4, 0x25, 0x6a, 0xcb, 0x26,
	0x33, 0xea, 0xb7, 0xe5, 0x3d, 0xe0, 0x08, 0x05, 0xfb, 0xdf, 0x45, 0x7e, 0xf3, 0x9e, 0x84, 0x03,
	0xbc, 0x1f, 0x06, 0x17, 0xfe, 0xa5, 0x51, 0x54, 0x75, 0x3a, 0xed, 0x45, 0x61, 0x38, 0x92, 0xcd,
	0x4f, 0x81, 0xc7, 0xb5, 0x4a, 0xa7, 0xdd, 0x30, 0x1c, 0x89, 0xfe, 0xe7, 0x53, 0x68, 0xf4, 0x47,
	0x6f, 0x7b, 0xc4, 0xff, 0x11, 0x4b, 0x25, 0x11, 0xfc, 0x5a, 0x7f, 0xf4, 0xf6, 0xd4, 0xff, 0x11,
	0x0b, 0xad, 0x67, 0x80, 0xc4, 0xcd, 0x1f, 0x04, 0x98, 0x7f, 0x7e, 0x2f, 0x9c, 0x88, 0x7e, 0xad,
	0xee, 0x34, 0x79, 0x0b, 0xa0, 0x16, 0x3a, 0x13, 0x8a, 0x9e, 0xc2, 0x4a, 0x46, 0xdb, 0x0f, 0x38,
	0xf5, 0xd4, 0x9d, 0xe5, 0x94, 0xf2, 0x61, 0xc0, 0xd8, 0x5a, 0x71, 0x95, 0x66, 0xeb, 0xb2, 0x60,
	0x6b, 0x25, 0x57, 0x6c, 0x9d, 0xe2, 0xb9, 0x85, 0x2c, 0xcf, 0x3d, 0x82, 0x3a, 0xdb, 0x34, 0xd1,
	0x58, 0x14, 0xdf, 0x31, 0x76, 0xa7, 0x5d, 0xad, 0xf4, 0x19, 0x34, 0xfc, 0xe8, 0x82, 0xa8, 0x9d,
	0x30, 0x69, 0x55, 0x38, 0x4e, 0x9d, 0x49, 0x77, 0x95, 0x10, 0xdd, 0x81, 0xa5, 0x38, 0xf2, 0x7a,
	0x51, 0x18, 0xd3, 0x16, 0x70, 0x98, 0xc5, 0x38, 0xf2, 0xba, 0x61, 0x4c, 0xed, 0x7f, 0x96, 0x58,
	0x8b, 0x9c, 0xf2, 0xb6, 0xb8, 0x4e, 0x3b, 0xb0, 0x3c, 0x89, 0x06, 0x2e, 0xc5, 0x03, 0xf6, 0xe1,
	0x17, 0xfe, 0xa5, 0xc8, 0xa8, 0xc6, 0xce, 0xe3, 0x36, 0x1f, 0x97, 0xda, 0x79, 0x56, 0x6d, 0xf1,
	0x76, 0xf6, 0x3e, 0xc2, 0x4e, 0x43, 0x9a, 0x0b, 0x11, 0x99, 0x8d, 0x5e, 0xf1, 0x36, 0xd1, 0x2b,
	0xdd, 0x3a, 0x7a, 0xf3, 0x1f, 0x12, 0xbd, 0x72, 0x7e, 0xf4, 0x66, 0x9c, 0xbe, 0x90, 0xe3, 0xf4,
	0x54, 0xdc, 0x16, 0x33, 0x71, 0xb3, 0xa7, 0x00, 0x89, 0x13, 0xd0, 0x0a, 0xd4, 0xcf, 0x5e, 0xf7,
	0xba, 0x9d, 0xce, 0x51, 0xef, 0xe8, 0xf0, 0xf8, 0xf0, 0xac, 0x39, 0x87, 0x10, 0x34, 0xf6, 0x8e,
	0xfe, 0xd8, 0x3b, 0x3d, 0xfc, 0xf3, 0x4b, 0x29, 0x2b, 0xa0, 0x26, 0xd4, 0x8e, 0x77, 0x5f, 0xf7,
	0xf6, 0x3b, 0x27, 0x27, 0xbd, 0xce, 0xf9, 0x59, 0xb3, 0x88, 0x96, 0xa1, 0xaa, 0x25, 0x87, 0x27,
	0xcd, 0x12, 0x43, 0x62, 0x82, 0xae, 0xd3, 0xf9, 0xc3, 0xf9, 0xfe, 0x4b, 0xe7, 0xb4, 0x39, 0x8f,
	0xea, 0x50, 0x49, 0x5e, 0xcb, 0xf6, 0x0e, 0xac, 0xa6, 0xda, 0x22, 0x59, 0x35, 0x72, 0x22, 0xf0,
	0x74, 0x0f, 0x22, 0x26, 0x02, 0xd1, 0xe5, 0x6e, 0x43, 0x33, 0x69, 0x7b, 0xd2, 0x06, 0x62, 0x84,
	0x28, 0xa4, 0x47, 0x88, 0x9d, 0xff, 0x54, 0x00, 0x9c, 0xc8, 0x93, 0x4d, 0x1b, 0xfa, 0x16, 0xea,
	0x4e, 0xe4, 0x25, 0xf7, 0x2b, 0x6a, 0xc9, 0xec, 0x98, 0x19, 0x00, 0xac, 0x3b, 0x39, 0x2b, 0x92,
	0xd4, 0xe7, 0x12, 0x1c, 0xd9, 0x3e, 0x99, 0x38, 0xe9, 0x69, 0xcf, 0xc4, 0xc9, 0xf4, 0x5a, 0xf6,
	0x1c, 0xfa, 0x0b, 0xac, 0x49, 0x9c, 0x54, 0x9b, 0x82, 0xee, 0x1b, 0x46, 0x79, 0x83, 0x8e, 0xf5,
	0xe0, 0x6a, 0x05, 0x0d, 0xfe, 0x7b, 0xfe, 0xe9, 0xf2, 0xaa, 0x47, 0xeb, 0x89, 0x85, 0x31, 0xb0,
	0x58, 0x1b, 0x59, 0xb1, 0x36, 0xdf, 0x87, 0x9a, 0x71, 0x36, 0x82, 0x36, 0x33, 0x5b, 0x2a, 0x9e,
	0xb7, 0x5a, 0xb3, 0x0b, 0x1a, 0xc4, 0x81, 0x15, 0x03, 0x44, 0xdc, 0xdf, 0xe8, 0x6e, 0xc6, 0x20,
	0x35, 0xb0, 0x58, 0x9f, 0x5c, 0xb1, 0xaa, 0x31, 0x5f, 0xc3, 0x6a, 0x1a, 0x53, 0xf4, 0x61, 0xf7,
	0x66, 0xed, 0xcc, 0xc9, 0xc6, 0xba, 0x7f, 0xe5, 0xba, 0x46, 0x3e, 0x07, 0xc4, 0x93, 0x25, 0x75,
	0x61, 0xa3, 0x4f, 0x34, 0x83, 0xe4, 0xcd, 0x3f, 0xd6, 0xbd, 0xab, 0x96, 0x35, 0xec, 0x00, 0x36,
	0x25, 0x6c, 0xb6, 0x4f, 0x40, 0xb6, 0x61, 0x7c, 0xc5, 0x0c, 0x64, 0x3d, 0xba, 0x56, 0x47, 0xef,
	0xf2, 0x46, 0xe5, 0x52, 0xba, 0x25, 0x30, 0x73, 0x29, 0x77, 0x0e, 0x32, 0x73, 0x29, 0xbf, 0x9b,
	0xb0, 0xe7, 0xbe, 0x2c, 0xa0, 0x97, 0x3c, 0x1d, 0x74, 0x5b, 0xa0, 0xd3, 0x21, 0x3b, 0x42, 0xe9,
	0x74, 0x98, 0xe9, 0x20, 0x38, 0xcc, 0x10, 0xee, 0x8b, 0x53, 0x66, 0xfa, 0x02, 0x36, 0x58, 0x9c,
	0x71, 0x6a, 0x45, 0xc6, 0x79, 0xf2, 0x3b, 0x0b, 0xeb, 0xe1, 0x35, 0x1a, 0xda, 0x1f, 0x11, 0x6c,
	0x89, 0x9d, 0x72, 0x7b, 0x04, 0xf4, 0x38, 0xc1, 0xb8, 0x6e, 0x7a, 0xb3, 0x3e, 0xbf, 0x51, 0x4f,
	0xef, 0x78, 0x08, 0x0d, 0x27, 0xf2, 0x0c, 0x52, 0x43, 0xaa, 0xf8, 0x67, 0xe7, 0x3f, 0xcb, 0xca,
	0x5b, 0xd2, 0x50, 0xdf, 0x40, 0x95, 0x1d, 0x5e, 0xd2, 0x18, 0xd2, 0x55, 0x9a, 0x9e, 0xf9, 0xac,
	0xcd, 0x19, 0xb9, 0x42, 0xd8, 0xf9, 0x47, 0x09, 0x6a, 0xbb, 0x83, 0xb1, 0x1f, 0x28, 0xee, 0x13,
	0x74, 0x20, 0xc7, 0x0d, 0x4d, 0x07, 0xe9, 0xbf, 0x4b, 0x34, 0x1d, 0x64, 0xa7, 0x92, 0x39, 0xf4,
	0x4b, 0x58, 0x94, 0x49, 0x8c, 0x90, 0x91, 0x90, 0xca, 0x70, 0x35, 0x25, 0xcb, 0xb8, 0xc4, 0x98,
	0xe8, 0x90, 0xc1, 0x87, 0x99, 0x7f, 0x76, 0xb4, 0x4b, 0x72, 0x06, 0x40, 0x7b, 0x0e, 0x75, 0xa0,
	0x29, 0x0f, 0xa0, 0x87, 0x50, 0xb4, 0x65, 0xec, 0x9a, 0xfd, 0xd7, 0xcc, 0xba, 0x9b, 0xbf, 0x98,
	0x39, 0x9b, 0x31, 0x33, 0xeb, 0xb3, 0xcd, 0xfe, 0xc7, 0xa7, 0xcf, 0x96, 0x37, 0x62, 0xab, 0xb3,
	0xa5, 0xe6, 0x6c, 0x7d, 0xb6, 0xbc, 0x3f, 0x12, 0xf5, 0xd9, 0xf2, 0x47, 0xf3, 0xb9, 0x9d, 0xff,
	0x16, 0xa0, 0x2e, 0x1a, 0xcd, 0xe4, 0xea, 0xaa, 0x0a, 0x4f, 0xf2, 0x46, 0x55, 0x73, 0x68, 0xee,
	0xbf, 0x12, 0x96, 0xc1, 0xd5, 0xa9, 0xbe, 0xd6, 0x9e, 0x43, 0x5d, 0x7e, 0xd4, 0x54, 0xc7, 0x7a,
	0x03, 0x98, 0x41, 0xd7, 0xb3, 0x5d, 0xae, 0x11, 0x18, 0x13, 0x71, 0xeb, 0x9a, 0xae, 0xeb, 0x26,
	0xc0, 0xbd, 0x85, 0x9f, 0x8a, 0xa5, 0x57, 0x47, 0x7f, 0xea, 0x2f, 0xf0, 0xe9, 0xf6, 0xf9, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x99, 0x8c, 0x3b, 0x2a, 0x21, 0x17, 0x00, 0x00,
}
