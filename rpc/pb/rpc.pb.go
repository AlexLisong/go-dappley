// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/dappley/go-dappley/rpc/pb/rpc.proto

package rpcpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pb "github.com/dappley/go-dappley/core/pb"
import pb1 "github.com/dappley/go-dappley/network/pb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateWalletRequest struct {
	Passphrase           string   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWalletRequest) Reset()         { *m = CreateWalletRequest{} }
func (m *CreateWalletRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWalletRequest) ProtoMessage()    {}
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{0}
}
func (m *CreateWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWalletRequest.Unmarshal(m, b)
}
func (m *CreateWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWalletRequest.Marshal(b, m, deterministic)
}
func (dst *CreateWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWalletRequest.Merge(dst, src)
}
func (m *CreateWalletRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWalletRequest.Size(m)
}
func (m *CreateWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWalletRequest proto.InternalMessageInfo

func (m *CreateWalletRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type UnlockWalletRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockWalletRequest) Reset()         { *m = UnlockWalletRequest{} }
func (m *UnlockWalletRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockWalletRequest) ProtoMessage()    {}
func (*UnlockWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{1}
}
func (m *UnlockWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockWalletRequest.Unmarshal(m, b)
}
func (m *UnlockWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockWalletRequest.Marshal(b, m, deterministic)
}
func (dst *UnlockWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockWalletRequest.Merge(dst, src)
}
func (m *UnlockWalletRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockWalletRequest.Size(m)
}
func (m *UnlockWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockWalletRequest proto.InternalMessageInfo

type AddProducerRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProducerRequest) Reset()         { *m = AddProducerRequest{} }
func (m *AddProducerRequest) String() string { return proto.CompactTextString(m) }
func (*AddProducerRequest) ProtoMessage()    {}
func (*AddProducerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{2}
}
func (m *AddProducerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProducerRequest.Unmarshal(m, b)
}
func (m *AddProducerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProducerRequest.Marshal(b, m, deterministic)
}
func (dst *AddProducerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProducerRequest.Merge(dst, src)
}
func (m *AddProducerRequest) XXX_Size() int {
	return xxx_messageInfo_AddProducerRequest.Size(m)
}
func (m *AddProducerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProducerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddProducerRequest proto.InternalMessageInfo

func (m *AddProducerRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetBalanceRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceRequest) Reset()         { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()    {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{3}
}
func (m *GetBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceRequest.Unmarshal(m, b)
}
func (m *GetBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceRequest.Marshal(b, m, deterministic)
}
func (dst *GetBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceRequest.Merge(dst, src)
}
func (m *GetBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalanceRequest.Size(m)
}
func (m *GetBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceRequest proto.InternalMessageInfo

func (m *GetBalanceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SendFromMinerRequest struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount               []byte   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFromMinerRequest) Reset()         { *m = SendFromMinerRequest{} }
func (m *SendFromMinerRequest) String() string { return proto.CompactTextString(m) }
func (*SendFromMinerRequest) ProtoMessage()    {}
func (*SendFromMinerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{4}
}
func (m *SendFromMinerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFromMinerRequest.Unmarshal(m, b)
}
func (m *SendFromMinerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFromMinerRequest.Marshal(b, m, deterministic)
}
func (dst *SendFromMinerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFromMinerRequest.Merge(dst, src)
}
func (m *SendFromMinerRequest) XXX_Size() int {
	return xxx_messageInfo_SendFromMinerRequest.Size(m)
}
func (m *SendFromMinerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFromMinerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendFromMinerRequest proto.InternalMessageInfo

func (m *SendFromMinerRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendFromMinerRequest) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

type SendRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount               []byte   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	WalletPath           string   `protobuf:"bytes,4,opt,name=walletPath,proto3" json:"walletPath,omitempty"`
	Tip                  []byte   `protobuf:"bytes,5,opt,name=tip,proto3" json:"tip,omitempty"`
	Data                 string   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{5}
}
func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (dst *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(dst, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *SendRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendRequest) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *SendRequest) GetWalletPath() string {
	if m != nil {
		return m.WalletPath
	}
	return ""
}

func (m *SendRequest) GetTip() []byte {
	if m != nil {
		return m.Tip
	}
	return nil
}

func (m *SendRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GetPeerInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeerInfoRequest) Reset()         { *m = GetPeerInfoRequest{} }
func (m *GetPeerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetPeerInfoRequest) ProtoMessage()    {}
func (*GetPeerInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{6}
}
func (m *GetPeerInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeerInfoRequest.Unmarshal(m, b)
}
func (m *GetPeerInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeerInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetPeerInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeerInfoRequest.Merge(dst, src)
}
func (m *GetPeerInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetPeerInfoRequest.Size(m)
}
func (m *GetPeerInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeerInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeerInfoRequest proto.InternalMessageInfo

type GetBlockchainInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockchainInfoRequest) Reset()         { *m = GetBlockchainInfoRequest{} }
func (m *GetBlockchainInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainInfoRequest) ProtoMessage()    {}
func (*GetBlockchainInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{7}
}
func (m *GetBlockchainInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainInfoRequest.Unmarshal(m, b)
}
func (m *GetBlockchainInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockchainInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainInfoRequest.Merge(dst, src)
}
func (m *GetBlockchainInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainInfoRequest.Size(m)
}
func (m *GetBlockchainInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainInfoRequest proto.InternalMessageInfo

type AddPeerRequest struct {
	FullAddress          string   `protobuf:"bytes,1,opt,name=fullAddress,proto3" json:"fullAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPeerRequest) Reset()         { *m = AddPeerRequest{} }
func (m *AddPeerRequest) String() string { return proto.CompactTextString(m) }
func (*AddPeerRequest) ProtoMessage()    {}
func (*AddPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{8}
}
func (m *AddPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPeerRequest.Unmarshal(m, b)
}
func (m *AddPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPeerRequest.Marshal(b, m, deterministic)
}
func (dst *AddPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPeerRequest.Merge(dst, src)
}
func (m *AddPeerRequest) XXX_Size() int {
	return xxx_messageInfo_AddPeerRequest.Size(m)
}
func (m *AddPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPeerRequest proto.InternalMessageInfo

func (m *AddPeerRequest) GetFullAddress() string {
	if m != nil {
		return m.FullAddress
	}
	return ""
}

type GetVersionRequest struct {
	ProtoVersion         string   `protobuf:"bytes,1,opt,name=protoVersion,proto3" json:"protoVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{9}
}
func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (dst *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(dst, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

func (m *GetVersionRequest) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

type GetUTXORequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUTXORequest) Reset()         { *m = GetUTXORequest{} }
func (m *GetUTXORequest) String() string { return proto.CompactTextString(m) }
func (*GetUTXORequest) ProtoMessage()    {}
func (*GetUTXORequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{10}
}
func (m *GetUTXORequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUTXORequest.Unmarshal(m, b)
}
func (m *GetUTXORequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUTXORequest.Marshal(b, m, deterministic)
}
func (dst *GetUTXORequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUTXORequest.Merge(dst, src)
}
func (m *GetUTXORequest) XXX_Size() int {
	return xxx_messageInfo_GetUTXORequest.Size(m)
}
func (m *GetUTXORequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUTXORequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUTXORequest proto.InternalMessageInfo

func (m *GetUTXORequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetBlocksRequest struct {
	StartBlockHashes     [][]byte `protobuf:"bytes,1,rep,name=startBlockHashes,proto3" json:"startBlockHashes,omitempty"`
	MaxCount             int32    `protobuf:"varint,2,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlocksRequest) Reset()         { *m = GetBlocksRequest{} }
func (m *GetBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlocksRequest) ProtoMessage()    {}
func (*GetBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{11}
}
func (m *GetBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocksRequest.Unmarshal(m, b)
}
func (m *GetBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocksRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocksRequest.Merge(dst, src)
}
func (m *GetBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlocksRequest.Size(m)
}
func (m *GetBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocksRequest proto.InternalMessageInfo

func (m *GetBlocksRequest) GetStartBlockHashes() [][]byte {
	if m != nil {
		return m.StartBlockHashes
	}
	return nil
}

func (m *GetBlocksRequest) GetMaxCount() int32 {
	if m != nil {
		return m.MaxCount
	}
	return 0
}

type GetBlockByHashRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHashRequest) Reset()         { *m = GetBlockByHashRequest{} }
func (m *GetBlockByHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHashRequest) ProtoMessage()    {}
func (*GetBlockByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{12}
}
func (m *GetBlockByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHashRequest.Unmarshal(m, b)
}
func (m *GetBlockByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHashRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHashRequest.Merge(dst, src)
}
func (m *GetBlockByHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHashRequest.Size(m)
}
func (m *GetBlockByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHashRequest proto.InternalMessageInfo

func (m *GetBlockByHashRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetBlockByHeightRequest struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHeightRequest) Reset()         { *m = GetBlockByHeightRequest{} }
func (m *GetBlockByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHeightRequest) ProtoMessage()    {}
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{13}
}
func (m *GetBlockByHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHeightRequest.Unmarshal(m, b)
}
func (m *GetBlockByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHeightRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHeightRequest.Merge(dst, src)
}
func (m *GetBlockByHeightRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHeightRequest.Size(m)
}
func (m *GetBlockByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHeightRequest proto.InternalMessageInfo

func (m *GetBlockByHeightRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type SendTransactionRequest struct {
	Transaction          *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{14}
}
func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(dst, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetTransaction() *pb.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SendBatchTransactionRequest struct {
	Transactions         []*pb.Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendBatchTransactionRequest) Reset()         { *m = SendBatchTransactionRequest{} }
func (m *SendBatchTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendBatchTransactionRequest) ProtoMessage()    {}
func (*SendBatchTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{15}
}
func (m *SendBatchTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendBatchTransactionRequest.Unmarshal(m, b)
}
func (m *SendBatchTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendBatchTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SendBatchTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendBatchTransactionRequest.Merge(dst, src)
}
func (m *SendBatchTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendBatchTransactionRequest.Size(m)
}
func (m *SendBatchTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendBatchTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendBatchTransactionRequest proto.InternalMessageInfo

func (m *SendBatchTransactionRequest) GetTransactions() []*pb.Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetNewTransactionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewTransactionRequest) Reset()         { *m = GetNewTransactionRequest{} }
func (m *GetNewTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewTransactionRequest) ProtoMessage()    {}
func (*GetNewTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{16}
}
func (m *GetNewTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewTransactionRequest.Unmarshal(m, b)
}
func (m *GetNewTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *GetNewTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewTransactionRequest.Merge(dst, src)
}
func (m *GetNewTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewTransactionRequest.Size(m)
}
func (m *GetNewTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewTransactionRequest proto.InternalMessageInfo

type SubscribeRequest struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{17}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(dst, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type AddProducerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProducerResponse) Reset()         { *m = AddProducerResponse{} }
func (m *AddProducerResponse) String() string { return proto.CompactTextString(m) }
func (*AddProducerResponse) ProtoMessage()    {}
func (*AddProducerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{18}
}
func (m *AddProducerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProducerResponse.Unmarshal(m, b)
}
func (m *AddProducerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProducerResponse.Marshal(b, m, deterministic)
}
func (dst *AddProducerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProducerResponse.Merge(dst, src)
}
func (m *AddProducerResponse) XXX_Size() int {
	return xxx_messageInfo_AddProducerResponse.Size(m)
}
func (m *AddProducerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProducerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddProducerResponse proto.InternalMessageInfo

type UnlockWalletResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockWalletResponse) Reset()         { *m = UnlockWalletResponse{} }
func (m *UnlockWalletResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockWalletResponse) ProtoMessage()    {}
func (*UnlockWalletResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{19}
}
func (m *UnlockWalletResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockWalletResponse.Unmarshal(m, b)
}
func (m *UnlockWalletResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockWalletResponse.Marshal(b, m, deterministic)
}
func (dst *UnlockWalletResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockWalletResponse.Merge(dst, src)
}
func (m *UnlockWalletResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockWalletResponse.Size(m)
}
func (m *UnlockWalletResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockWalletResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockWalletResponse proto.InternalMessageInfo

type GetBalanceResponse struct {
	Amount               int64    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceResponse) Reset()         { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()    {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{20}
}
func (m *GetBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceResponse.Unmarshal(m, b)
}
func (m *GetBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceResponse.Marshal(b, m, deterministic)
}
func (dst *GetBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceResponse.Merge(dst, src)
}
func (m *GetBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetBalanceResponse.Size(m)
}
func (m *GetBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceResponse proto.InternalMessageInfo

func (m *GetBalanceResponse) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type SendFromMinerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFromMinerResponse) Reset()         { *m = SendFromMinerResponse{} }
func (m *SendFromMinerResponse) String() string { return proto.CompactTextString(m) }
func (*SendFromMinerResponse) ProtoMessage()    {}
func (*SendFromMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{21}
}
func (m *SendFromMinerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFromMinerResponse.Unmarshal(m, b)
}
func (m *SendFromMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFromMinerResponse.Marshal(b, m, deterministic)
}
func (dst *SendFromMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFromMinerResponse.Merge(dst, src)
}
func (m *SendFromMinerResponse) XXX_Size() int {
	return xxx_messageInfo_SendFromMinerResponse.Size(m)
}
func (m *SendFromMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFromMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendFromMinerResponse proto.InternalMessageInfo

type SendResponse struct {
	ContractAddr         string   `protobuf:"bytes,1,opt,name=contractAddr,proto3" json:"contractAddr,omitempty"`
	Txid                 string   `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{22}
}
func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (dst *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(dst, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetContractAddr() string {
	if m != nil {
		return m.ContractAddr
	}
	return ""
}

func (m *SendResponse) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type GetPeerInfoResponse struct {
	PeerList             *pb1.Peerlist `protobuf:"bytes,1,opt,name=peerList,proto3" json:"peerList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetPeerInfoResponse) Reset()         { *m = GetPeerInfoResponse{} }
func (m *GetPeerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetPeerInfoResponse) ProtoMessage()    {}
func (*GetPeerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{23}
}
func (m *GetPeerInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeerInfoResponse.Unmarshal(m, b)
}
func (m *GetPeerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeerInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetPeerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeerInfoResponse.Merge(dst, src)
}
func (m *GetPeerInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetPeerInfoResponse.Size(m)
}
func (m *GetPeerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeerInfoResponse proto.InternalMessageInfo

func (m *GetPeerInfoResponse) GetPeerList() *pb1.Peerlist {
	if m != nil {
		return m.PeerList
	}
	return nil
}

type GetBlockchainInfoResponse struct {
	TailBlockHash        []byte   `protobuf:"bytes,1,opt,name=tailBlockHash,proto3" json:"tailBlockHash,omitempty"`
	BlockHeight          uint64   `protobuf:"varint,2,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	Producers            []string `protobuf:"bytes,3,rep,name=producers,proto3" json:"producers,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockchainInfoResponse) Reset()         { *m = GetBlockchainInfoResponse{} }
func (m *GetBlockchainInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainInfoResponse) ProtoMessage()    {}
func (*GetBlockchainInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{24}
}
func (m *GetBlockchainInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainInfoResponse.Unmarshal(m, b)
}
func (m *GetBlockchainInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockchainInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainInfoResponse.Merge(dst, src)
}
func (m *GetBlockchainInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainInfoResponse.Size(m)
}
func (m *GetBlockchainInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainInfoResponse proto.InternalMessageInfo

func (m *GetBlockchainInfoResponse) GetTailBlockHash() []byte {
	if m != nil {
		return m.TailBlockHash
	}
	return nil
}

func (m *GetBlockchainInfoResponse) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *GetBlockchainInfoResponse) GetProducers() []string {
	if m != nil {
		return m.Producers
	}
	return nil
}

func (m *GetBlockchainInfoResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type AddPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPeerResponse) Reset()         { *m = AddPeerResponse{} }
func (m *AddPeerResponse) String() string { return proto.CompactTextString(m) }
func (*AddPeerResponse) ProtoMessage()    {}
func (*AddPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{25}
}
func (m *AddPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPeerResponse.Unmarshal(m, b)
}
func (m *AddPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPeerResponse.Marshal(b, m, deterministic)
}
func (dst *AddPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPeerResponse.Merge(dst, src)
}
func (m *AddPeerResponse) XXX_Size() int {
	return xxx_messageInfo_AddPeerResponse.Size(m)
}
func (m *AddPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPeerResponse proto.InternalMessageInfo

type GetVersionResponse struct {
	ProtoVersion         string   `protobuf:"bytes,1,opt,name=protoVersion,proto3" json:"protoVersion,omitempty"`
	ServerVersion        string   `protobuf:"bytes,2,opt,name=serverVersion,proto3" json:"serverVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{26}
}
func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (dst *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(dst, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

func (m *GetVersionResponse) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

type GetUTXOResponse struct {
	Utxos                []*UTXO           `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	BlockHeaders         []*pb.BlockHeader `protobuf:"bytes,2,rep,name=blockHeaders,proto3" json:"blockHeaders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetUTXOResponse) Reset()         { *m = GetUTXOResponse{} }
func (m *GetUTXOResponse) String() string { return proto.CompactTextString(m) }
func (*GetUTXOResponse) ProtoMessage()    {}
func (*GetUTXOResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{27}
}
func (m *GetUTXOResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUTXOResponse.Unmarshal(m, b)
}
func (m *GetUTXOResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUTXOResponse.Marshal(b, m, deterministic)
}
func (dst *GetUTXOResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUTXOResponse.Merge(dst, src)
}
func (m *GetUTXOResponse) XXX_Size() int {
	return xxx_messageInfo_GetUTXOResponse.Size(m)
}
func (m *GetUTXOResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUTXOResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUTXOResponse proto.InternalMessageInfo

func (m *GetUTXOResponse) GetUtxos() []*UTXO {
	if m != nil {
		return m.Utxos
	}
	return nil
}

func (m *GetUTXOResponse) GetBlockHeaders() []*pb.BlockHeader {
	if m != nil {
		return m.BlockHeaders
	}
	return nil
}

// TODO: Refactor to corepb.UTXO
type UTXO struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	PublicKeyHash        []byte   `protobuf:"bytes,2,opt,name=publicKeyHash,proto3" json:"publicKeyHash,omitempty"`
	Txid                 []byte   `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	TxIndex              uint32   `protobuf:"varint,4,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UTXO) Reset()         { *m = UTXO{} }
func (m *UTXO) String() string { return proto.CompactTextString(m) }
func (*UTXO) ProtoMessage()    {}
func (*UTXO) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{28}
}
func (m *UTXO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTXO.Unmarshal(m, b)
}
func (m *UTXO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTXO.Marshal(b, m, deterministic)
}
func (dst *UTXO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTXO.Merge(dst, src)
}
func (m *UTXO) XXX_Size() int {
	return xxx_messageInfo_UTXO.Size(m)
}
func (m *UTXO) XXX_DiscardUnknown() {
	xxx_messageInfo_UTXO.DiscardUnknown(m)
}

var xxx_messageInfo_UTXO proto.InternalMessageInfo

func (m *UTXO) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *UTXO) GetPublicKeyHash() []byte {
	if m != nil {
		return m.PublicKeyHash
	}
	return nil
}

func (m *UTXO) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *UTXO) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

type GetBlocksResponse struct {
	Blocks               []*pb.Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetBlocksResponse) Reset()         { *m = GetBlocksResponse{} }
func (m *GetBlocksResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlocksResponse) ProtoMessage()    {}
func (*GetBlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{29}
}
func (m *GetBlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocksResponse.Unmarshal(m, b)
}
func (m *GetBlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocksResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocksResponse.Merge(dst, src)
}
func (m *GetBlocksResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlocksResponse.Size(m)
}
func (m *GetBlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocksResponse proto.InternalMessageInfo

func (m *GetBlocksResponse) GetBlocks() []*pb.Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type GetBlockByHashResponse struct {
	Block                *pb.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetBlockByHashResponse) Reset()         { *m = GetBlockByHashResponse{} }
func (m *GetBlockByHashResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHashResponse) ProtoMessage()    {}
func (*GetBlockByHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{30}
}
func (m *GetBlockByHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHashResponse.Unmarshal(m, b)
}
func (m *GetBlockByHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHashResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHashResponse.Merge(dst, src)
}
func (m *GetBlockByHashResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHashResponse.Size(m)
}
func (m *GetBlockByHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHashResponse proto.InternalMessageInfo

func (m *GetBlockByHashResponse) GetBlock() *pb.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetBlockByHeightResponse struct {
	Block                *pb.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetBlockByHeightResponse) Reset()         { *m = GetBlockByHeightResponse{} }
func (m *GetBlockByHeightResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHeightResponse) ProtoMessage()    {}
func (*GetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{31}
}
func (m *GetBlockByHeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHeightResponse.Unmarshal(m, b)
}
func (m *GetBlockByHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHeightResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockByHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHeightResponse.Merge(dst, src)
}
func (m *GetBlockByHeightResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHeightResponse.Size(m)
}
func (m *GetBlockByHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHeightResponse proto.InternalMessageInfo

func (m *GetBlockByHeightResponse) GetBlock() *pb.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type SendTransactionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionResponse) Reset()         { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()    {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{32}
}
func (m *SendTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionResponse.Unmarshal(m, b)
}
func (m *SendTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *SendTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionResponse.Merge(dst, src)
}
func (m *SendTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendTransactionResponse.Size(m)
}
func (m *SendTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionResponse proto.InternalMessageInfo

type SendBatchTransactionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendBatchTransactionResponse) Reset()         { *m = SendBatchTransactionResponse{} }
func (m *SendBatchTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendBatchTransactionResponse) ProtoMessage()    {}
func (*SendBatchTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{33}
}
func (m *SendBatchTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendBatchTransactionResponse.Unmarshal(m, b)
}
func (m *SendBatchTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendBatchTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *SendBatchTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendBatchTransactionResponse.Merge(dst, src)
}
func (m *SendBatchTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendBatchTransactionResponse.Size(m)
}
func (m *SendBatchTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendBatchTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendBatchTransactionResponse proto.InternalMessageInfo

type SendTransactionStatus struct {
	Txid                 []byte   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Code                 uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionStatus) Reset()         { *m = SendTransactionStatus{} }
func (m *SendTransactionStatus) String() string { return proto.CompactTextString(m) }
func (*SendTransactionStatus) ProtoMessage()    {}
func (*SendTransactionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{34}
}
func (m *SendTransactionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionStatus.Unmarshal(m, b)
}
func (m *SendTransactionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionStatus.Marshal(b, m, deterministic)
}
func (dst *SendTransactionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionStatus.Merge(dst, src)
}
func (m *SendTransactionStatus) XXX_Size() int {
	return xxx_messageInfo_SendTransactionStatus.Size(m)
}
func (m *SendTransactionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionStatus proto.InternalMessageInfo

func (m *SendTransactionStatus) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *SendTransactionStatus) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SendTransactionStatus) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type GetNewTransactionResponse struct {
	Transaction          *pb.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetNewTransactionResponse) Reset()         { *m = GetNewTransactionResponse{} }
func (m *GetNewTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewTransactionResponse) ProtoMessage()    {}
func (*GetNewTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{35}
}
func (m *GetNewTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewTransactionResponse.Unmarshal(m, b)
}
func (m *GetNewTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *GetNewTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewTransactionResponse.Merge(dst, src)
}
func (m *GetNewTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewTransactionResponse.Size(m)
}
func (m *GetNewTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewTransactionResponse proto.InternalMessageInfo

func (m *GetNewTransactionResponse) GetTransaction() *pb.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SubscribeResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{36}
}
func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (dst *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(dst, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GetAllTransactionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTransactionsRequest) Reset()         { *m = GetAllTransactionsRequest{} }
func (m *GetAllTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllTransactionsRequest) ProtoMessage()    {}
func (*GetAllTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{37}
}
func (m *GetAllTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTransactionsRequest.Unmarshal(m, b)
}
func (m *GetAllTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAllTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTransactionsRequest.Merge(dst, src)
}
func (m *GetAllTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllTransactionsRequest.Size(m)
}
func (m *GetAllTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTransactionsRequest proto.InternalMessageInfo

type GetAllTransactionsResponse struct {
	Transactions         []*pb.Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAllTransactionsResponse) Reset()         { *m = GetAllTransactionsResponse{} }
func (m *GetAllTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTransactionsResponse) ProtoMessage()    {}
func (*GetAllTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_6544dec4f0a1b1e7, []int{38}
}
func (m *GetAllTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTransactionsResponse.Unmarshal(m, b)
}
func (m *GetAllTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *GetAllTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTransactionsResponse.Merge(dst, src)
}
func (m *GetAllTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllTransactionsResponse.Size(m)
}
func (m *GetAllTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTransactionsResponse proto.InternalMessageInfo

func (m *GetAllTransactionsResponse) GetTransactions() []*pb.Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateWalletRequest)(nil), "rpcpb.CreateWalletRequest")
	proto.RegisterType((*UnlockWalletRequest)(nil), "rpcpb.UnlockWalletRequest")
	proto.RegisterType((*AddProducerRequest)(nil), "rpcpb.AddProducerRequest")
	proto.RegisterType((*GetBalanceRequest)(nil), "rpcpb.GetBalanceRequest")
	proto.RegisterType((*SendFromMinerRequest)(nil), "rpcpb.SendFromMinerRequest")
	proto.RegisterType((*SendRequest)(nil), "rpcpb.SendRequest")
	proto.RegisterType((*GetPeerInfoRequest)(nil), "rpcpb.GetPeerInfoRequest")
	proto.RegisterType((*GetBlockchainInfoRequest)(nil), "rpcpb.GetBlockchainInfoRequest")
	proto.RegisterType((*AddPeerRequest)(nil), "rpcpb.AddPeerRequest")
	proto.RegisterType((*GetVersionRequest)(nil), "rpcpb.GetVersionRequest")
	proto.RegisterType((*GetUTXORequest)(nil), "rpcpb.GetUTXORequest")
	proto.RegisterType((*GetBlocksRequest)(nil), "rpcpb.GetBlocksRequest")
	proto.RegisterType((*GetBlockByHashRequest)(nil), "rpcpb.GetBlockByHashRequest")
	proto.RegisterType((*GetBlockByHeightRequest)(nil), "rpcpb.GetBlockByHeightRequest")
	proto.RegisterType((*SendTransactionRequest)(nil), "rpcpb.SendTransactionRequest")
	proto.RegisterType((*SendBatchTransactionRequest)(nil), "rpcpb.SendBatchTransactionRequest")
	proto.RegisterType((*GetNewTransactionRequest)(nil), "rpcpb.GetNewTransactionRequest")
	proto.RegisterType((*SubscribeRequest)(nil), "rpcpb.SubscribeRequest")
	proto.RegisterType((*AddProducerResponse)(nil), "rpcpb.AddProducerResponse")
	proto.RegisterType((*UnlockWalletResponse)(nil), "rpcpb.UnlockWalletResponse")
	proto.RegisterType((*GetBalanceResponse)(nil), "rpcpb.GetBalanceResponse")
	proto.RegisterType((*SendFromMinerResponse)(nil), "rpcpb.SendFromMinerResponse")
	proto.RegisterType((*SendResponse)(nil), "rpcpb.SendResponse")
	proto.RegisterType((*GetPeerInfoResponse)(nil), "rpcpb.GetPeerInfoResponse")
	proto.RegisterType((*GetBlockchainInfoResponse)(nil), "rpcpb.GetBlockchainInfoResponse")
	proto.RegisterType((*AddPeerResponse)(nil), "rpcpb.AddPeerResponse")
	proto.RegisterType((*GetVersionResponse)(nil), "rpcpb.GetVersionResponse")
	proto.RegisterType((*GetUTXOResponse)(nil), "rpcpb.GetUTXOResponse")
	proto.RegisterType((*UTXO)(nil), "rpcpb.UTXO")
	proto.RegisterType((*GetBlocksResponse)(nil), "rpcpb.GetBlocksResponse")
	proto.RegisterType((*GetBlockByHashResponse)(nil), "rpcpb.GetBlockByHashResponse")
	proto.RegisterType((*GetBlockByHeightResponse)(nil), "rpcpb.GetBlockByHeightResponse")
	proto.RegisterType((*SendTransactionResponse)(nil), "rpcpb.SendTransactionResponse")
	proto.RegisterType((*SendBatchTransactionResponse)(nil), "rpcpb.SendBatchTransactionResponse")
	proto.RegisterType((*SendTransactionStatus)(nil), "rpcpb.SendTransactionStatus")
	proto.RegisterType((*GetNewTransactionResponse)(nil), "rpcpb.GetNewTransactionResponse")
	proto.RegisterType((*SubscribeResponse)(nil), "rpcpb.SubscribeResponse")
	proto.RegisterType((*GetAllTransactionsRequest)(nil), "rpcpb.GetAllTransactionsRequest")
	proto.RegisterType((*GetAllTransactionsResponse)(nil), "rpcpb.GetAllTransactionsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcServiceClient is the client API for RpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcServiceClient interface {
	RpcGetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
	RpcGetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	RpcGetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error)
	RpcGetUTXO(ctx context.Context, in *GetUTXORequest, opts ...grpc.CallOption) (*GetUTXOResponse, error)
	RpcGetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error)
	RpcGetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockByHashResponse, error)
	RpcGetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockByHeightResponse, error)
	RpcSendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	RpcSendBatchTransaction(ctx context.Context, in *SendBatchTransactionRequest, opts ...grpc.CallOption) (*SendBatchTransactionResponse, error)
	RpcGetNewTransaction(ctx context.Context, in *GetNewTransactionRequest, opts ...grpc.CallOption) (RpcService_RpcGetNewTransactionClient, error)
	RpcSubscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (RpcService_RpcSubscribeClient, error)
	RpcGetAllTransactionsFromTxPool(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*GetAllTransactionsResponse, error)
}

type rpcServiceClient struct {
	cc *grpc.ClientConn
}

func NewRpcServiceClient(cc *grpc.ClientConn) RpcServiceClient {
	return &rpcServiceClient{cc}
}

func (c *rpcServiceClient) RpcGetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error) {
	out := new(GetBlockchainInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockchainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetUTXO(ctx context.Context, in *GetUTXORequest, opts ...grpc.CallOption) (*GetUTXOResponse, error) {
	out := new(GetUTXOResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetUTXO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error) {
	out := new(GetBlocksResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockByHashResponse, error) {
	out := new(GetBlockByHashResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockByHeightResponse, error) {
	out := new(GetBlockByHeightResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcSendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcSendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcSendBatchTransaction(ctx context.Context, in *SendBatchTransactionRequest, opts ...grpc.CallOption) (*SendBatchTransactionResponse, error) {
	out := new(SendBatchTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcSendBatchTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcServiceClient) RpcGetNewTransaction(ctx context.Context, in *GetNewTransactionRequest, opts ...grpc.CallOption) (RpcService_RpcGetNewTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcService_serviceDesc.Streams[0], "/rpcpb.RpcService/RpcGetNewTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcServiceRpcGetNewTransactionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RpcService_RpcGetNewTransactionClient interface {
	Recv() (*GetNewTransactionResponse, error)
	grpc.ClientStream
}

type rpcServiceRpcGetNewTransactionClient struct {
	grpc.ClientStream
}

func (x *rpcServiceRpcGetNewTransactionClient) Recv() (*GetNewTransactionResponse, error) {
	m := new(GetNewTransactionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rpcServiceClient) RpcSubscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (RpcService_RpcSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcService_serviceDesc.Streams[1], "/rpcpb.RpcService/RpcSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcServiceRpcSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RpcService_RpcSubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type rpcServiceRpcSubscribeClient struct {
	grpc.ClientStream
}

func (x *rpcServiceRpcSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rpcServiceClient) RpcGetAllTransactionsFromTxPool(ctx context.Context, in *GetAllTransactionsRequest, opts ...grpc.CallOption) (*GetAllTransactionsResponse, error) {
	out := new(GetAllTransactionsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.RpcService/RpcGetAllTransactionsFromTxPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcServiceServer is the server API for RpcService service.
type RpcServiceServer interface {
	RpcGetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
	RpcGetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	RpcGetBlockchainInfo(context.Context, *GetBlockchainInfoRequest) (*GetBlockchainInfoResponse, error)
	RpcGetUTXO(context.Context, *GetUTXORequest) (*GetUTXOResponse, error)
	RpcGetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error)
	RpcGetBlockByHash(context.Context, *GetBlockByHashRequest) (*GetBlockByHashResponse, error)
	RpcGetBlockByHeight(context.Context, *GetBlockByHeightRequest) (*GetBlockByHeightResponse, error)
	RpcSendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionResponse, error)
	RpcSendBatchTransaction(context.Context, *SendBatchTransactionRequest) (*SendBatchTransactionResponse, error)
	RpcGetNewTransaction(*GetNewTransactionRequest, RpcService_RpcGetNewTransactionServer) error
	RpcSubscribe(*SubscribeRequest, RpcService_RpcSubscribeServer) error
	RpcGetAllTransactionsFromTxPool(context.Context, *GetAllTransactionsRequest) (*GetAllTransactionsResponse, error)
}

func RegisterRpcServiceServer(s *grpc.Server, srv RpcServiceServer) {
	s.RegisterService(&_RpcService_serviceDesc, srv)
}

func _RpcService_RpcGetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockchainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockchainInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockchainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockchainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockchainInfo(ctx, req.(*GetBlockchainInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetUTXO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUTXORequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetUTXO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetUTXO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetUTXO(ctx, req.(*GetUTXORequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlocks(ctx, req.(*GetBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockByHash(ctx, req.(*GetBlockByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetBlockByHeight(ctx, req.(*GetBlockByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcSendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcSendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcSendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcSendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcSendBatchTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendBatchTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcSendBatchTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcSendBatchTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcSendBatchTransaction(ctx, req.(*SendBatchTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcService_RpcGetNewTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetNewTransactionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RpcServiceServer).RpcGetNewTransaction(m, &rpcServiceRpcGetNewTransactionServer{stream})
}

type RpcService_RpcGetNewTransactionServer interface {
	Send(*GetNewTransactionResponse) error
	grpc.ServerStream
}

type rpcServiceRpcGetNewTransactionServer struct {
	grpc.ServerStream
}

func (x *rpcServiceRpcGetNewTransactionServer) Send(m *GetNewTransactionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RpcService_RpcSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RpcServiceServer).RpcSubscribe(m, &rpcServiceRpcSubscribeServer{stream})
}

type RpcService_RpcSubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type rpcServiceRpcSubscribeServer struct {
	grpc.ServerStream
}

func (x *rpcServiceRpcSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RpcService_RpcGetAllTransactionsFromTxPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServiceServer).RpcGetAllTransactionsFromTxPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.RpcService/RpcGetAllTransactionsFromTxPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServiceServer).RpcGetAllTransactionsFromTxPool(ctx, req.(*GetAllTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.RpcService",
	HandlerType: (*RpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcGetVersion",
			Handler:    _RpcService_RpcGetVersion_Handler,
		},
		{
			MethodName: "RpcGetBalance",
			Handler:    _RpcService_RpcGetBalance_Handler,
		},
		{
			MethodName: "RpcGetBlockchainInfo",
			Handler:    _RpcService_RpcGetBlockchainInfo_Handler,
		},
		{
			MethodName: "RpcGetUTXO",
			Handler:    _RpcService_RpcGetUTXO_Handler,
		},
		{
			MethodName: "RpcGetBlocks",
			Handler:    _RpcService_RpcGetBlocks_Handler,
		},
		{
			MethodName: "RpcGetBlockByHash",
			Handler:    _RpcService_RpcGetBlockByHash_Handler,
		},
		{
			MethodName: "RpcGetBlockByHeight",
			Handler:    _RpcService_RpcGetBlockByHeight_Handler,
		},
		{
			MethodName: "RpcSendTransaction",
			Handler:    _RpcService_RpcSendTransaction_Handler,
		},
		{
			MethodName: "RpcSendBatchTransaction",
			Handler:    _RpcService_RpcSendBatchTransaction_Handler,
		},
		{
			MethodName: "RpcGetAllTransactionsFromTxPool",
			Handler:    _RpcService_RpcGetAllTransactionsFromTxPool_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RpcGetNewTransaction",
			Handler:       _RpcService_RpcGetNewTransaction_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RpcSubscribe",
			Handler:       _RpcService_RpcSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/dappley/go-dappley/rpc/pb/rpc.proto",
}

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminServiceClient interface {
	RpcAddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error)
	RpcSend(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
	RpcGetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error)
	RpcSendFromMiner(ctx context.Context, in *SendFromMinerRequest, opts ...grpc.CallOption) (*SendFromMinerResponse, error)
	RpcAddProducer(ctx context.Context, in *AddProducerRequest, opts ...grpc.CallOption) (*AddProducerResponse, error)
	RpcUnlockWallet(ctx context.Context, in *UnlockWalletRequest, opts ...grpc.CallOption) (*UnlockWalletResponse, error)
}

type adminServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminServiceClient(cc *grpc.ClientConn) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) RpcAddPeer(ctx context.Context, in *AddPeerRequest, opts ...grpc.CallOption) (*AddPeerResponse, error) {
	out := new(AddPeerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcAddPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcSend(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcGetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error) {
	out := new(GetPeerInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcGetPeerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcSendFromMiner(ctx context.Context, in *SendFromMinerRequest, opts ...grpc.CallOption) (*SendFromMinerResponse, error) {
	out := new(SendFromMinerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcSendFromMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcAddProducer(ctx context.Context, in *AddProducerRequest, opts ...grpc.CallOption) (*AddProducerResponse, error) {
	out := new(AddProducerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcAddProducer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RpcUnlockWallet(ctx context.Context, in *UnlockWalletRequest, opts ...grpc.CallOption) (*UnlockWalletResponse, error) {
	out := new(UnlockWalletResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/RpcUnlockWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
type AdminServiceServer interface {
	RpcAddPeer(context.Context, *AddPeerRequest) (*AddPeerResponse, error)
	RpcSend(context.Context, *SendRequest) (*SendResponse, error)
	RpcGetPeerInfo(context.Context, *GetPeerInfoRequest) (*GetPeerInfoResponse, error)
	RpcSendFromMiner(context.Context, *SendFromMinerRequest) (*SendFromMinerResponse, error)
	RpcAddProducer(context.Context, *AddProducerRequest) (*AddProducerResponse, error)
	RpcUnlockWallet(context.Context, *UnlockWalletRequest) (*UnlockWalletResponse, error)
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_RpcAddPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcAddPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcAddPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcAddPeer(ctx, req.(*AddPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcSend(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcGetPeerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcGetPeerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcGetPeerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcGetPeerInfo(ctx, req.(*GetPeerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcSendFromMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFromMinerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcSendFromMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcSendFromMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcSendFromMiner(ctx, req.(*SendFromMinerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcAddProducer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProducerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcAddProducer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcAddProducer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcAddProducer(ctx, req.(*AddProducerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RpcUnlockWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RpcUnlockWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/RpcUnlockWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RpcUnlockWallet(ctx, req.(*UnlockWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcAddPeer",
			Handler:    _AdminService_RpcAddPeer_Handler,
		},
		{
			MethodName: "RpcSend",
			Handler:    _AdminService_RpcSend_Handler,
		},
		{
			MethodName: "RpcGetPeerInfo",
			Handler:    _AdminService_RpcGetPeerInfo_Handler,
		},
		{
			MethodName: "RpcSendFromMiner",
			Handler:    _AdminService_RpcSendFromMiner_Handler,
		},
		{
			MethodName: "RpcAddProducer",
			Handler:    _AdminService_RpcAddProducer_Handler,
		},
		{
			MethodName: "RpcUnlockWallet",
			Handler:    _AdminService_RpcUnlockWallet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/dappley/go-dappley/rpc/pb/rpc.proto",
}

func init() {
	proto.RegisterFile("github.com/dappley/go-dappley/rpc/pb/rpc.proto", fileDescriptor_rpc_6544dec4f0a1b1e7)
}

var fileDescriptor_rpc_6544dec4f0a1b1e7 = []byte{
	// 1337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0xeb, 0x6e, 0xdc, 0x44,
	0x14, 0xce, 0x66, 0x73, 0x69, 0x4e, 0x36, 0xb7, 0xd9, 0x5c, 0x36, 0x4e, 0x48, 0xd2, 0x29, 0x08,
	0x54, 0xe8, 0x86, 0x06, 0xaa, 0x48, 0x48, 0x05, 0x25, 0x11, 0xa1, 0x11, 0x81, 0x04, 0x27, 0x69,
	0x2b, 0x10, 0x48, 0x5e, 0x7b, 0x92, 0xb5, 0xea, 0xb5, 0x8d, 0x3d, 0x4b, 0xb6, 0x4f, 0xc1, 0x23,
	0x20, 0xf1, 0x14, 0x3c, 0x1a, 0x3f, 0x99, 0x19, 0xcf, 0x8c, 0xc7, 0x5e, 0x6f, 0x42, 0xfb, 0x6b,
	0xc7, 0xe7, 0xf2, 0xcd, 0xcc, 0x39, 0xe7, 0x3b, 0x73, 0x16, 0xda, 0x37, 0x3e, 0xed, 0xf6, 0x3b,
	0x6d, 0x37, 0xea, 0xed, 0x7a, 0x4e, 0x1c, 0x07, 0xe4, 0xed, 0xee, 0x4d, 0xf4, 0x44, 0x2d, 0x93,
	0xd8, 0xdd, 0x8d, 0x3b, 0xfc, 0xa7, 0x1d, 0x27, 0x11, 0x8d, 0xd0, 0x24, 0x5b, 0xc6, 0x1d, 0x6b,
	0xff, 0x6e, 0xb7, 0x90, 0xd0, 0xdb, 0x28, 0x79, 0xc3, 0x5d, 0x63, 0x42, 0x92, 0xc0, 0x4f, 0x69,
	0xe6, 0x6f, 0x3d, 0xbd, 0xdb, 0xd1, 0x8d, 0x12, 0xc2, 0xbd, 0x3a, 0x41, 0xe4, 0xbe, 0x91, 0x2e,
	0xfb, 0xff, 0xcf, 0x85, 0x26, 0x4e, 0x98, 0x3a, 0x2e, 0xf5, 0xa3, 0x30, 0x73, 0xc4, 0xcf, 0xa0,
	0x79, 0x94, 0x10, 0x87, 0x92, 0x57, 0x4e, 0x10, 0x10, 0x6a, 0x93, 0xdf, 0xfb, 0x24, 0xa5, 0x68,
	0x0b, 0x20, 0x76, 0xd2, 0x34, 0xee, 0x26, 0x4e, 0x4a, 0x5a, 0xb5, 0x9d, 0xda, 0x27, 0x33, 0xb6,
	0x21, 0xc1, 0x2b, 0xd0, 0xbc, 0x0a, 0xf9, 0xfe, 0x05, 0x37, 0xdc, 0x06, 0x74, 0xe0, 0x79, 0xe7,
	0x49, 0xe4, 0xf5, 0x5d, 0x92, 0x28, 0xb0, 0x16, 0x4c, 0x3b, 0x9e, 0x97, 0x90, 0x34, 0x95, 0x48,
	0xea, 0x13, 0x3f, 0x81, 0xa5, 0xef, 0x08, 0x3d, 0x74, 0x02, 0x27, 0x74, 0xc9, 0xfd, 0xe6, 0x5f,
	0xc3, 0xf2, 0x05, 0x09, 0xbd, 0xe3, 0x24, 0xea, 0xfd, 0xe0, 0x87, 0xf9, 0x06, 0xf3, 0x30, 0x4e,
	0x23, 0x69, 0xcc, 0x56, 0x68, 0x15, 0xa6, 0x9c, 0x5e, 0xd4, 0x0f, 0x69, 0x6b, 0x9c, 0xc9, 0x1a,
	0xb6, 0xfc, 0xc2, 0x7f, 0xd6, 0x60, 0x96, 0x03, 0x28, 0x3f, 0x04, 0x13, 0xd7, 0x0c, 0x4b, 0x7a,
	0x8a, 0xb5, 0xc4, 0x1a, 0xaf, 0xc0, 0xaa, 0x9b, 0x58, 0x3c, 0x42, 0xb7, 0xe2, 0xee, 0xe7, 0x0e,
	0xed, 0xb6, 0x26, 0xb2, 0x08, 0xe5, 0x12, 0xb4, 0x08, 0x75, 0xea, 0xc7, 0xad, 0x49, 0xe1, 0xc4,
	0x97, 0x7c, 0x37, 0xcf, 0xa1, 0x4e, 0x6b, 0x2a, 0xdb, 0x8d, 0xaf, 0xf1, 0x32, 0x20, 0x16, 0x80,
	0x73, 0x96, 0xff, 0x93, 0xf0, 0x3a, 0x52, 0x61, 0xb4, 0xa0, 0xc5, 0xc3, 0xc2, 0xe3, 0xeb, 0x76,
	0x1d, 0x3f, 0x34, 0x75, 0x7b, 0x30, 0xcf, 0x43, 0x4c, 0xf2, 0xdb, 0xef, 0xc0, 0xec, 0x75, 0x3f,
	0x08, 0x0e, 0x0a, 0x31, 0x33, 0x45, 0x78, 0x5f, 0x84, 0xf9, 0x25, 0x49, 0x52, 0x96, 0x78, 0xe5,
	0x86, 0xa1, 0x21, 0x4a, 0x40, 0x8a, 0xa5, 0x5f, 0x41, 0x86, 0x1f, 0xc3, 0x3c, 0x73, 0xbc, 0xba,
	0x7c, 0x7d, 0x76, 0x7f, 0x72, 0x7e, 0x86, 0x45, 0x75, 0xe8, 0x54, 0x59, 0x3f, 0x86, 0xc5, 0x94,
	0x3a, 0x49, 0x26, 0x7d, 0xe1, 0xa4, 0x5d, 0xc2, 0xdd, 0xea, 0x2c, 0x22, 0x43, 0x72, 0x64, 0xc1,
	0x83, 0x9e, 0x33, 0x38, 0xd2, 0x69, 0x9b, 0xb4, 0xf5, 0x37, 0xfe, 0x14, 0x56, 0x14, 0xf6, 0xe1,
	0x5b, 0x6e, 0x6f, 0x64, 0xb0, 0xcb, 0x3e, 0xc5, 0x59, 0x1a, 0xb6, 0x58, 0xe3, 0xa7, 0xb0, 0x66,
	0x18, 0x13, 0xff, 0xa6, 0xab, 0xcb, 0x9a, 0x25, 0xb3, 0x2b, 0x04, 0xc2, 0x61, 0xc2, 0x96, 0x5f,
	0xf8, 0x0c, 0x56, 0x79, 0x5d, 0x5c, 0xe6, 0xf4, 0x50, 0x1e, 0xcf, 0x60, 0xd6, 0x20, 0x8d, 0x70,
	0x9b, 0xdd, 0x6b, 0xb6, 0x39, 0xa1, 0xe2, 0x4e, 0xdb, 0x74, 0x30, 0xed, 0xf0, 0x4b, 0xd8, 0xe0,
	0x80, 0x87, 0x0e, 0x75, 0xbb, 0x15, 0xa8, 0xfb, 0xd0, 0x30, 0xac, 0xb3, 0x98, 0x8c, 0x80, 0x2d,
	0x18, 0xca, 0xca, 0xf8, 0x91, 0xdc, 0x0e, 0x83, 0xb2, 0x64, 0x2d, 0x5e, 0xf4, 0x3b, 0xa9, 0x9b,
	0xf8, 0x1d, 0x62, 0x5c, 0x98, 0x46, 0xb1, 0xef, 0x66, 0x5b, 0xcc, 0xd8, 0xf2, 0x8b, 0xf3, 0xb7,
	0x40, 0xd4, 0x34, 0x66, 0xe8, 0x04, 0xaf, 0xc2, 0x72, 0x91, 0xd6, 0x52, 0xfe, 0x99, 0x28, 0x53,
	0xcd, 0xd3, 0x4c, 0x6a, 0x50, 0x83, 0x87, 0xa5, 0xae, 0x69, 0xb6, 0x06, 0x2b, 0x25, 0x9a, 0x4a,
	0x98, 0x63, 0x68, 0x64, 0xf4, 0x93, 0x00, 0xac, 0x04, 0xdd, 0x28, 0x64, 0x17, 0x74, 0x29, 0x2f,
	0x55, 0x55, 0x82, 0xa6, 0x8c, 0x67, 0x98, 0x0e, 0x7c, 0x4f, 0x32, 0x52, 0xac, 0x19, 0x4e, 0xb3,
	0xc0, 0x1a, 0x09, 0xb7, 0x0b, 0x0f, 0x78, 0x27, 0x3d, 0x65, 0x9d, 0x54, 0x27, 0x4a, 0x76, 0x59,
	0x16, 0xd4, 0x73, 0xd9, 0x64, 0x6d, 0x6d, 0x84, 0xff, 0xaa, 0xc1, 0x7a, 0x05, 0xd1, 0x24, 0xdc,
	0x87, 0x30, 0x47, 0x1d, 0x3f, 0xd0, 0x35, 0x2a, 0x8b, 0xac, 0x28, 0xe4, 0xec, 0x13, 0x8d, 0x38,
	0x2b, 0x34, 0x71, 0xcc, 0x09, 0xdb, 0x14, 0xa1, 0x4d, 0x98, 0x89, 0x65, 0xa0, 0x53, 0xd6, 0x44,
	0x78, 0x1a, 0x72, 0x01, 0xd7, 0x52, 0xbf, 0xc7, 0x72, 0xe5, 0xf4, 0x62, 0xd1, 0x46, 0xea, 0x76,
	0x2e, 0xc0, 0x4b, 0xb0, 0xa0, 0xd9, 0x2e, 0x83, 0xf8, 0x9b, 0xc8, 0x85, 0x26, 0x73, 0x1e, 0xca,
	0xfb, 0xd8, 0xcc, 0x2f, 0x94, 0x92, 0xe4, 0x0f, 0x92, 0x28, 0xa3, 0x2c, 0xa6, 0x45, 0x21, 0xee,
	0xc1, 0x82, 0xe6, 0xbc, 0x04, 0x7f, 0x08, 0x93, 0x7d, 0x3a, 0x88, 0x54, 0x9d, 0xce, 0xb6, 0xc5,
	0x03, 0xd7, 0x16, 0x36, 0x99, 0x86, 0x57, 0xb4, 0xbc, 0xb3, 0xe3, 0xf1, 0x7b, 0x8e, 0x17, 0x2b,
	0xfa, 0x30, 0xd7, 0xd9, 0x05, 0x43, 0x9c, 0xc0, 0x04, 0xc7, 0x29, 0x15, 0x53, 0xde, 0x67, 0xd9,
	0xa1, 0xe3, 0x7e, 0x27, 0xf0, 0xdd, 0xef, 0x89, 0x60, 0xbe, 0x6c, 0xe9, 0x45, 0xa1, 0xae, 0x92,
	0xac, 0x47, 0x8b, 0x35, 0x6f, 0x55, 0x74, 0x70, 0x12, 0x7a, 0x64, 0x20, 0xe2, 0x3a, 0x67, 0xab,
	0x4f, 0xfc, 0x55, 0xf6, 0xec, 0xc8, 0x56, 0x25, 0x2f, 0xf9, 0x11, 0x4c, 0x89, 0x83, 0xa9, 0x5b,
	0xce, 0x15, 0xce, 0x6e, 0x4b, 0x25, 0x7e, 0x0e, 0xab, 0xe5, 0x56, 0x24, 0x01, 0x1e, 0xc1, 0xa4,
	0xb0, 0x91, 0xb5, 0x57, 0xf2, 0xcf, 0x74, 0xf8, 0x9b, 0xbc, 0xb5, 0xe7, 0xcd, 0xe9, 0x5d, 0x00,
	0xd6, 0x61, 0x6d, 0xa8, 0x55, 0xc9, 0xca, 0xd8, 0x82, 0xcd, 0xea, 0xa6, 0x23, 0xf5, 0x3f, 0x65,
	0xbc, 0x34, 0x54, 0x17, 0xd4, 0xa1, 0xfd, 0x54, 0x47, 0xaf, 0x66, 0x44, 0x8f, 0xc9, 0xdc, 0xc8,
	0x23, 0x22, 0xdc, 0x73, 0xb6, 0x58, 0xf3, 0x37, 0xad, 0x97, 0xde, 0x88, 0x20, 0xcf, 0xd8, 0x7c,
	0x89, 0x6d, 0x41, 0xa0, 0x72, 0x3f, 0x92, 0xf7, 0x79, 0xcf, 0xde, 0xf9, 0x31, 0x2c, 0x19, 0x7d,
	0x4c, 0x62, 0xa9, 0xc7, 0xb3, 0x66, 0x3c, 0x9e, 0x1b, 0x62, 0xf3, 0x83, 0x20, 0x30, 0xa0, 0xd4,
	0xd3, 0x83, 0xaf, 0xc0, 0xaa, 0x52, 0x4a, 0xb8, 0xf7, 0x6d, 0xc0, 0x7b, 0xff, 0x4e, 0x03, 0xd8,
	0xb1, 0x7b, 0xc1, 0x28, 0xe3, 0xbb, 0x04, 0x1d, 0xc3, 0x1c, 0xfb, 0xca, 0xf9, 0x88, 0x5a, 0x92,
	0x1b, 0x43, 0xef, 0xad, 0xb5, 0x5e, 0xa1, 0x91, 0x89, 0x19, 0xcb, 0x71, 0x64, 0x8f, 0x35, 0x71,
	0x8a, 0xe3, 0x91, 0x89, 0x53, 0x6a, 0xc8, 0x0c, 0xe7, 0x17, 0x58, 0x96, 0x38, 0x85, 0x9e, 0x86,
	0xb6, 0x0d, 0xa7, 0xaa, 0xb1, 0xc2, 0xda, 0x19, 0x6d, 0xa0, 0xc1, 0x9f, 0x8b, 0xab, 0xcb, 0xe6,
	0x80, 0x56, 0x72, 0x0f, 0x63, 0x40, 0xb0, 0x56, 0xcb, 0x62, 0xed, 0x7e, 0x04, 0x0d, 0xe3, 0x6c,
	0x29, 0x5a, 0x2b, 0x6d, 0xa9, 0x52, 0x67, 0xb5, 0x86, 0x15, 0x1a, 0xc4, 0x86, 0x25, 0x03, 0x24,
	0x63, 0x20, 0xda, 0x2c, 0x39, 0x14, 0x66, 0x04, 0xeb, 0x83, 0x11, 0x5a, 0x8d, 0xf9, 0x1a, 0x9a,
	0x45, 0xcc, 0xac, 0x6f, 0x6f, 0x0d, 0xfb, 0x99, 0xc3, 0x84, 0xb5, 0x3d, 0x52, 0xaf, 0x91, 0xaf,
	0x00, 0x89, 0x62, 0x29, 0x90, 0x0e, 0xa9, 0x03, 0x55, 0x8f, 0x1c, 0xd6, 0xd6, 0x28, 0xb5, 0x86,
	0xf5, 0x60, 0x4d, 0xc2, 0x96, 0xb9, 0x8e, 0xb0, 0xe1, 0x3c, 0x62, 0xfa, 0xb0, 0x1e, 0xdd, 0x69,
	0xa3, 0x77, 0xf9, 0x55, 0xd5, 0x52, 0x91, 0xde, 0x66, 0x2d, 0x55, 0x0e, 0x22, 0x66, 0x2d, 0x55,
	0x77, 0x06, 0x3c, 0xf6, 0x79, 0x0d, 0x7d, 0x2b, 0xca, 0x41, 0x33, 0x5d, 0x97, 0x43, 0x79, 0x86,
	0xd1, 0xe5, 0x30, 0xd4, 0x14, 0x04, 0x4c, 0x17, 0xb6, 0xb3, 0x53, 0x96, 0xa8, 0xce, 0xa7, 0x8f,
	0xcb, 0xc1, 0x79, 0x14, 0x05, 0xc8, 0x38, 0x4f, 0x75, 0xb3, 0xb0, 0x1e, 0xde, 0x61, 0xa1, 0xf6,
	0xda, 0xfb, 0xa7, 0x0e, 0x8d, 0x03, 0xaf, 0xe7, 0x87, 0x8a, 0xfc, 0x19, 0x1f, 0xe4, 0xfb, 0xac,
	0xf9, 0x50, 0x9c, 0xce, 0x35, 0x1f, 0xca, 0xcf, 0xf8, 0x18, 0xfa, 0x12, 0xa6, 0x65, 0x16, 0x11,
	0x32, 0x32, 0xa2, 0x1c, 0x9b, 0x05, 0x99, 0xf6, 0x3a, 0x81, 0xf9, 0xec, 0xbe, 0x6a, 0xfc, 0x41,
	0x46, 0x43, 0x28, 0xfd, 0x91, 0xb0, 0xac, 0x2a, 0x95, 0x86, 0x3a, 0x83, 0x45, 0x79, 0x00, 0x3d,
	0xaa, 0xa1, 0x0d, 0x63, 0xd7, 0xf2, 0xff, 0x2c, 0x6b, 0xb3, 0x5a, 0x59, 0x3a, 0x9b, 0x31, 0x58,
	0xea, 0xb3, 0x0d, 0xff, 0x2b, 0xd4, 0x67, 0xab, 0x9a, 0x43, 0xc7, 0xd0, 0x29, 0x2c, 0x30, 0x28,
	0x73, 0x18, 0x45, 0xca, 0xa1, 0xe2, 0x8f, 0xa7, 0xb5, 0x51, 0xa9, 0x53, 0x68, 0x87, 0x53, 0x7f,
	0x8f, 0xd7, 0x5f, 0x9c, 0xbe, 0xea, 0x4c, 0x89, 0x79, 0xe8, 0x8b, 0xff, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x6e, 0xb7, 0xb6, 0xb3, 0xd2, 0x0f, 0x00, 0x00,
}
