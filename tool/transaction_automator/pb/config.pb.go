// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/config.proto

package tx_automator_configpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Port                 uint32   `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Tps                  uint32   `protobuf:"varint,2,opt,name=tps,proto3" json:"tps,omitempty"`
	ScFreq               uint32   `protobuf:"varint,3,opt,name=scFreq,proto3" json:"scFreq,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	MaxAccount           uint32   `protobuf:"varint,5,opt,name=maxAccount,proto3" json:"maxAccount,omitempty"`
	InitialAmount        uint64   `protobuf:"varint,6,opt,name=initialAmount,proto3" json:"initialAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_c2b61375bb150917, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Config) GetTps() uint32 {
	if m != nil {
		return m.Tps
	}
	return 0
}

func (m *Config) GetScFreq() uint32 {
	if m != nil {
		return m.ScFreq
	}
	return 0
}

func (m *Config) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Config) GetMaxAccount() uint32 {
	if m != nil {
		return m.MaxAccount
	}
	return 0
}

func (m *Config) GetInitialAmount() uint64 {
	if m != nil {
		return m.InitialAmount
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "tx_automator_configpb.Config")
}

func init() { proto.RegisterFile("pb/config.proto", fileDescriptor_config_c2b61375bb150917) }

var fileDescriptor_config_c2b61375bb150917 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x48, 0xd2, 0x4f,
	0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x2d, 0xa9, 0x88,
	0x4f, 0x2c, 0x2d, 0xc9, 0xcf, 0x4d, 0x2c, 0xc9, 0x2f, 0x8a, 0x87, 0x48, 0x15, 0x24, 0x29, 0x2d,
	0x63, 0xe4, 0x62, 0x73, 0x06, 0x73, 0x84, 0x84, 0xb8, 0x58, 0x0a, 0xf2, 0x8b, 0x4a, 0x24, 0x18,
	0x15, 0x18, 0x35, 0x78, 0x83, 0xc0, 0x6c, 0x21, 0x01, 0x2e, 0xe6, 0x92, 0x82, 0x62, 0x09, 0x26,
	0xb0, 0x10, 0x88, 0x29, 0x24, 0xc6, 0xc5, 0x56, 0x9c, 0xec, 0x56, 0x94, 0x5a, 0x28, 0xc1, 0x0c,
	0x16, 0x84, 0xf2, 0x84, 0xa4, 0xb8, 0x38, 0x0a, 0x12, 0x8b, 0x8b, 0xcb, 0xf3, 0x8b, 0x52, 0x24,
	0x58, 0x14, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x21, 0x19, 0x2e, 0xce, 0xdc, 0xc4, 0x8a, 0xf0,
	0xc4, 0x9c, 0x9c, 0xd4, 0x12, 0x09, 0x56, 0xb0, 0x36, 0x84, 0x80, 0x90, 0x0a, 0x17, 0x6f, 0x66,
	0x5e, 0x66, 0x49, 0x66, 0x62, 0x8e, 0x63, 0x6e, 0x7e, 0x69, 0x5e, 0x89, 0x04, 0x9b, 0x02, 0xa3,
	0x06, 0x4b, 0x10, 0xaa, 0x60, 0x12, 0x1b, 0xd8, 0x1b, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x48, 0xa5, 0x72, 0x08, 0xd9, 0x00, 0x00, 0x00,
}
