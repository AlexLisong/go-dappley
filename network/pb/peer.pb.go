// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/dappley/go-dappley/network/pb/peer.proto

package networkpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PeerInfo struct {
	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address []string `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
	// Types that are valid to be assigned to OptionalValue:
	//	*PeerInfo_Latency
	OptionalValue        isPeerInfo_OptionalValue `protobuf_oneof:"optional_value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_peer_c6428627d6bbe544, []int{0}
}
func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (dst *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(dst, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PeerInfo) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type isPeerInfo_OptionalValue interface {
	isPeerInfo_OptionalValue()
}

type PeerInfo_Latency struct {
	Latency float64 `protobuf:"fixed64,3,opt,name=latency,proto3,oneof"`
}

func (*PeerInfo_Latency) isPeerInfo_OptionalValue() {}

func (m *PeerInfo) GetOptionalValue() isPeerInfo_OptionalValue {
	if m != nil {
		return m.OptionalValue
	}
	return nil
}

func (m *PeerInfo) GetLatency() float64 {
	if x, ok := m.GetOptionalValue().(*PeerInfo_Latency); ok {
		return x.Latency
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PeerInfo) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PeerInfo_OneofMarshaler, _PeerInfo_OneofUnmarshaler, _PeerInfo_OneofSizer, []interface{}{
		(*PeerInfo_Latency)(nil),
	}
}

func _PeerInfo_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PeerInfo)
	// optional_value
	switch x := m.OptionalValue.(type) {
	case *PeerInfo_Latency:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Latency))
	case nil:
	default:
		return fmt.Errorf("PeerInfo.OptionalValue has unexpected type %T", x)
	}
	return nil
}

func _PeerInfo_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PeerInfo)
	switch tag {
	case 3: // optional_value.latency
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.OptionalValue = &PeerInfo_Latency{math.Float64frombits(x)}
		return true, err
	default:
		return false, nil
	}
}

func _PeerInfo_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PeerInfo)
	// optional_value
	switch x := m.OptionalValue.(type) {
	case *PeerInfo_Latency:
		n += 1 // tag and wire
		n += 8
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*PeerInfo)(nil), "networkpb.PeerInfo")
}

func init() {
	proto.RegisterFile("github.com/dappley/go-dappley/network/pb/peer.proto", fileDescriptor_peer_c6428627d6bbe544)
}

var fileDescriptor_peer_c6428627d6bbe544 = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0xcd, 0xb1, 0xae, 0x82, 0x30,
	0x14, 0xc6, 0xf1, 0x5b, 0x48, 0x2e, 0xd2, 0x81, 0x98, 0x4e, 0x8d, 0x13, 0x71, 0x62, 0x91, 0x0e,
	0xbc, 0x81, 0x93, 0x6e, 0x86, 0x17, 0x30, 0x2d, 0x3d, 0x62, 0x63, 0xed, 0x39, 0x29, 0x45, 0xc3,
	0xdb, 0x9b, 0x18, 0xd9, 0xbe, 0xef, 0xb7, 0xfc, 0x79, 0x37, 0xba, 0x74, 0x9f, 0x4d, 0x3b, 0xe0,
	0x53, 0x59, 0x4d, 0xe4, 0x61, 0x51, 0x23, 0x1e, 0xd6, 0x19, 0x20, 0xbd, 0x31, 0x3e, 0x14, 0x19,
	0x45, 0x00, 0xb1, 0xa5, 0x88, 0x09, 0x45, 0xf9, 0x63, 0x32, 0x7b, 0xc3, 0x37, 0x17, 0x80, 0x78,
	0x0e, 0x37, 0x14, 0x15, 0xcf, 0x9c, 0x95, 0xac, 0x66, 0x4d, 0xd9, 0x67, 0xce, 0x0a, 0xc9, 0x0b,
	0x6d, 0x6d, 0x84, 0x69, 0x92, 0x59, 0x9d, 0x37, 0x65, 0xbf, 0x5e, 0xb1, 0xe3, 0x85, 0xd7, 0x09,
	0xc2, 0xb0, 0xc8, 0xbc, 0x66, 0x0d, 0x3b, 0xfd, 0xf5, 0x2b, 0x1c, 0xb7, 0xbc, 0x42, 0x4a, 0x0e,
	0x83, 0xf6, 0xd7, 0x97, 0xf6, 0x33, 0x98, 0xff, 0x6f, 0xb5, 0xfb, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xa9, 0x7e, 0xc1, 0xdc, 0xac, 0x00, 0x00, 0x00,
}
